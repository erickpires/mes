"9d5e263c3f760cba8e243f5bd98355b35a2fdee0"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#18=[nil nil ((#("        " 0 8 (fontified t)) . -7538) (undo-tree-id556 . -8) (undo-tree-id557 . -8)) nil (23273 10250 323414 181000) 0 nil]) ((#("
" 0 1 (fontified t)) . 7538) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) 7539) nil (23273 10250 323422 646000) 0 nil]) ((#("        string_slice code = full_line;
        code.len -= current_line->comment.len;
" 0 8 (fontified t) 8 19 (fontified t face font-lock-type-face) 19 20 (fontified t c-type c-decl-id-start face font-lock-type-face) 20 21 (fontified t) 21 25 (fontified t face font-lock-variable-name-face) 25 71 (fontified t) 71 73 (composition (13 2 #1=[9 57620]) fontified t) 73 86 (fontified t)) . 7548) (undo-tree-id561 . -86) (undo-tree-id562 . -86) (undo-tree-id563 . -86) (undo-tree-id564 . -39) (undo-tree-id565 . -39) (undo-tree-id566 . -86)) nil (23273 10250 323432 692000) 0 nil]) ((7537 . 7538)) nil (23273 10250 323435 227000) 0 nil]) ((7529 . 7537)) nil (23273 10250 323437 89000) 0 nil]) ((#("o" 0 1 (fontified t)) . -7529) (undo-tree-id567 . -1) 7530) nil (23273 10250 323440 612000) 0 nil]) ((7526 . 7530)) nil (23273 10250 323442 717000) 0 nil]) ((7523 . 7526) (#("l" 0 1 (fontified t)) . -7523) (undo-tree-id568 . -1) 7524) nil (23273 10250 323446 144000) 0 nil]) ((7522 . 7524)) nil (23273 10250 323448 375000) 0 nil]) ((7513 . 7522) (#("fu" 0 1 (fontified t) 1 2 (fontified t)) . -7513) (undo-tree-id569 . -2) 7515) nil (23273 10250 323451 922000) 0 nil]) ((7510 . 7515)) nil (23273 10250 323454 288000) 0 nil]) ((7507 . 7510) (#("l" 0 1 (fontified t)) . -7507) (undo-tree-id570 . -1) 7508) nil (23273 10250 323457 636000) 0 nil]) ((7506 . 7508)) nil (23273 10250 323459 657000) 0 nil]) ((7499 . 7506) (#("comm" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -7499) (undo-tree-id571 . -4) 7503) nil (23273 10250 323463 167000) 0 nil]) ((7497 . 7503)) nil (23273 10250 323465 342000) 0 nil]) ((7485 . 7497) (#("curre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -7485) (undo-tree-id572 . -5) 7490) nil (23273 10250 323469 107000) 0 nil]) ((7485 . 7490)) nil (23273 10250 323471 154000) 0 nil]) ((7476 . 7485)) nil (23273 10250 323472 445000) 0 nil]) ((7475 . 7476)) nil (23273 10250 323473 827000) 0 nil]) ((7473 . 7475)) nil (23273 10250 323475 154000) 0 nil]) ((7464 . 7473)) nil (23273 10250 323476 647000) 0 nil]) ((7459 . 7464)) nil (23273 10250 323477 888000) 0 nil]) ((7458 . 7459)) nil (23273 10250 323479 442000) 0 nil]) ((7449 . 7458) (#("full" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -7449) (undo-tree-id573 . -4) 7453) nil (23273 10250 323483 33000) 0 nil]) ((7446 . 7453)) nil (23273 10250 323485 110000) 0 nil]) ((7441 . 7446) (#("be" 0 1 (fontified t) 1 2 (fontified t)) . -7441) (undo-tree-id574 . -2) 7443) nil (23273 10250 323488 756000) 0 nil]) ((7440 . 7443)) nil (23273 10250 323490 946000) 0 nil]) ((7433 . 7440) (#("co" 0 1 (fontified t) 1 2 (fontified t)) . -7433) (undo-tree-id575 . -2) 7435) nil (23273 10250 323494 555000) 0 nil]) ((7431 . 7435)) nil (23273 10250 323496 704000) 0 nil]) ((7419 . 7431) (#("curre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -7419) (undo-tree-id576 . -5) 7424) nil (23273 10250 323502 759000) 0 nil]) ((7419 . 7424)) nil (23273 10250 323504 748000) 0 nil]) ((7410 . 7419)) nil (23273 10250 323506 112000) 0 nil]) ((#("current_line->comment = find_char_from_right(full_line, ';');" 0 1 (c-is-sws t fontified t) 1 12 (fontified t) 12 14 (composition (13 2 #1#) fontified t) 14 56 (fontified t) 56 59 (fontified t face font-lock-string-face) 59 61 (fontified t)) . 7419) (undo-tree-id577 . -61) (undo-tree-id578 . -45) (undo-tree-id579 . -61)) nil (23273 10250 323511 137000) 0 nil]) ((7370 . 7371)) nil (23273 10250 323513 257000) 0 nil]) ((7369 . 7371) (#("'" 0 1 (fontified nil)) . -7369) (7369 . 7370) (#("'" 0 1 (fontified nil)) . -7369) (7365 . 7370) (t 23273 10132 286755 615000)) nil (23273 10250 323529 324000) 0 nil]) ((#("            " 0 12 (c-in-sws t c-is-sws t)) . -24484) (undo-tree-id505 . -12) (undo-tree-id506 . -12) (#("        " 0 8 (fontified t)) . -7403) (undo-tree-id507 . -8) (undo-tree-id508 . -8) 7411) nil (23273 10132 105752 90000) 0 nil]) ((7402 . 7411)) nil (23273 10132 105757 164000) 0 nil]) ((7352 . 7364) (7351 . 7353) (#("[" 0 1 (fontified nil)) . -7351) (7348 . 7352)) nil (23273 10132 105760 453000) 0 nil]) ((7338 . 7348)) nil (23273 10132 105762 793000) 0 nil]) ((7337 . 7338)) nil (23273 10132 105764 280000) 0 nil]) ((7365 . 7373) (#(" " 0 1 (fontified nil)) . 7364) (undo-tree-id509 . -1) (7365 . 7366)) nil (23273 10132 105768 83000) 0 nil]) ((7341 . 7353) (#(" " 0 1 (fontified nil)) . 7340) (undo-tree-id510 . -1) (7341 . 7342)) nil (23273 10132 105772 317000) 0 nil]) ((7352 . 7353)) nil (23273 10132 105774 642000) 0 nil]) ((7351 . 7352)) nil (23273 10132 105776 457000) 0 nil]) ((7340 . 7351)) nil (23273 10132 105777 790000) 0 nil]) ((7339 . 7341) (#("{" 0 1 (fontified nil)) . -7339) (7339 . 7340)) nil (23273 10132 105779 908000) 0 nil]) ((7338 . 7339)) nil (23273 10132 105781 899000) 0 nil]) ((7333 . 7337)) nil (23273 10132 105783 319000) 0 nil]) ((7333 . 7334) (#(")" 0 1 (fontified nil)) . -7333) (7333 . 7334)) nil (23273 10132 105785 516000) 0 nil]) ((7329 . 7333)) nil (23273 10132 105787 573000) 0 nil]) ((#(")" 0 1 (fontified t)) . -7325) (undo-tree-id511 . -1) (undo-tree-id512 . 1) (undo-tree-id513 . -1) 7326) nil (23273 10132 105793 266000) 0 nil]) ((7324 . 7326) (#("(" 0 1 (fontified nil)) . -7324) (7324 . 7325)) nil (23273 10132 105796 156000) 0 nil]) ((7322 . 7324)) nil (23273 10132 105798 60000) 0 nil]) ((7322 . 7326)) nil (23273 10132 105799 459000) 0 nil]) ((7313 . 7322)) nil (23273 10132 105800 963000) 0 nil]) ((7312 . 7313)) nil (23273 10132 105802 434000) 0 nil]) ((nil rear-nonsticky nil 7310 . 7311) (7297 . 7311)) nil (23273 10132 105804 245000) 0 nil]) ((7296 . 7298) (#("(" 0 1 (fontified nil)) . -7296) (7296 . 7297)) nil (23273 10132 105806 488000) 0 nil]) ((#("," 0 1 (fontified t c-type c-decl-id-start)) . -7296) (undo-tree-id514 . -1) 7297) nil (23273 10132 105809 987000) 0 nil]) ((#(" " 0 1 (fontified t)) . 7297) (undo-tree-id515 . -1) 7298) nil (23273 10132 105813 703000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-variable-name-face)) . -7298) (undo-tree-id516 . -1) (#("h" 0 1 (fontified t face font-lock-variable-name-face)) . -7299) (undo-tree-id517 . -1) 7300) nil (23273 10132 105819 195000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -7300) (undo-tree-id518 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -7301) (undo-tree-id519 . -1) 7302) nil (23273 10132 105824 757000) 0 nil]) ((#(" " 0 1 (fontified t)) . 7302) (undo-tree-id520 . -1) 7303) nil (23273 10132 105828 862000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -7303) (undo-tree-id521 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -7304) (undo-tree-id522 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -7305) (undo-tree-id523 . -1) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -7306) (undo-tree-id524 . -1) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -7307) (undo-tree-id525 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -7308) (undo-tree-id526 . -1) (#(")" 0 1 (fontified t)) . -7309) (undo-tree-id527 . -1) (undo-tree-id528 . 1) (undo-tree-id529 . -1) 7310) nil (23273 10132 105843 482000) 0 nil]) ((7292 . 7296) (#("string_slice haystack" 0 12 (fontified t) 12 13 (fontified t) 13 21 (fontified t)) . 7292) (undo-tree-id530 . -21)) nil (23273 10132 105849 668000) 0 nil]) ((#("r" 0 1 (fontified t)) . -7292) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (#("i" 0 1 (fontified t)) . -7293) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#("g" 0 1 (fontified t)) . -7294) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (#("h" 0 1 (fontified t)) . -7295) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#("t" 0 1 (fontified t)) . -7296) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (#("(" 0 1 (fontified t)) . -7297) (undo-tree-id551 . -1) (undo-tree-id552 . -1) 7298) nil (23273 10132 105878 638000) 0 nil]) ((7277 . 7333) (#("find_" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -7277) (undo-tree-id553 . -5) 7282) nil (23273 10132 105885 547000) 0 nil]) ((7277 . 7282)) nil (23273 10132 105887 992000) 0 nil]) ((7257 . 7277)) nil (23273 10132 105889 567000) 0 nil]) ((7248 . 7257)) nil (23273 10132 105890 999000) 0 nil]) ((#("// TODO(erick): Ignore labels inside macros definitions." 0 1 (composition #2=(0 2 #3=[9 57647]) c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 2 (composition #2# c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-warning-face) 4 5 (c-in-sws t fontified t face font-lock-warning-face) 5 6 (c-in-sws t fontified t face font-lock-warning-face) 6 7 (c-in-sws t fontified t face font-lock-warning-face) 7 8 (c-in-sws t fontified t face font-lock-comment-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (composition (1 1 #5=[9 57708]) c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 18 (c-in-sws t fontified t face font-lock-comment-face) 18 19 (c-in-sws t fontified t face font-lock-comment-face) 19 20 (c-in-sws t fontified t face font-lock-comment-face) 20 21 (c-in-sws t fontified t face font-lock-comment-face) 21 22 (c-in-sws t fontified t face font-lock-comment-face) 22 23 (c-in-sws t fontified t face font-lock-comment-face) 23 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 26 (c-in-sws t fontified t face font-lock-comment-face) 26 27 (c-in-sws t fontified t face font-lock-comment-face) 27 28 (c-in-sws t fontified t face font-lock-comment-face) 28 29 (c-in-sws t fontified t face font-lock-comment-face) 29 30 (c-in-sws t fontified t face font-lock-comment-face) 30 31 (c-in-sws t fontified t face font-lock-comment-face) 31 32 (c-in-sws t fontified t face font-lock-comment-face) 32 33 (c-in-sws t fontified t face font-lock-comment-face) 33 34 (c-in-sws t fontified t face font-lock-comment-face) 34 35 (c-in-sws t fontified t face font-lock-comment-face) 35 36 (c-in-sws t fontified t face font-lock-comment-face) 36 37 (c-in-sws t fontified t face font-lock-comment-face) 37 38 (c-in-sws t fontified t face font-lock-comment-face) 38 39 (c-in-sws t fontified t face font-lock-comment-face) 39 40 (c-in-sws t fontified t face font-lock-comment-face) 40 41 (c-in-sws t fontified t face font-lock-comment-face) 41 42 (c-in-sws t fontified t face font-lock-comment-face) 42 43 (c-in-sws t fontified t face font-lock-comment-face) 43 44 (c-in-sws t fontified t face font-lock-comment-face) 44 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (c-in-sws t fontified t face font-lock-comment-face) 46 47 (c-in-sws t fontified t face font-lock-comment-face) 47 48 (c-in-sws t fontified t face font-lock-comment-face) 48 49 (c-in-sws t fontified t face font-lock-comment-face) 49 50 (c-in-sws t fontified t face font-lock-comment-face) 50 51 (c-in-sws t fontified t face font-lock-comment-face) 51 52 (c-in-sws t fontified t face font-lock-comment-face) 52 53 (c-in-sws t fontified t face font-lock-comment-face) 53 54 (c-in-sws t fontified t face font-lock-comment-face) 54 55 (c-in-sws t fontified t face font-lock-comment-face) 55 56 (c-in-sws t fontified t face font-lock-comment-face)) . 24341) (undo-tree-id554 . -56) (undo-tree-id555 . -56) (t 23273 9837 937291 659000)) nil (23273 10132 105895 648000) 0 nil]) ((560 . 575)) nil (23273 9837 864779 803000) 0 nil]) ((558 . 560)) nil (23273 9837 864787 521000) 0 nil]) ((557 . 558) (t 23273 9711 167743 442000)) nil (23273 9837 864792 149000) 0 nil]) ((#("// " 0 1 (composition #4=(0 2 #3#) c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (composition #4# c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -24719) (#("// " 0 2 (c-in-sws t composition (0 2 #3#) fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -24694) (#("// " 0 2 (c-in-sws t composition (0 2 #3#) fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -24643) (#("// " 0 2 (c-in-sws t composition (0 2 #3#) fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -24589) (#("// " 0 2 (c-in-sws t composition (0 2 #3#) fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -24538) (#("// " 0 2 (c-in-sws t composition (0 2 #3#) fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -24458) (#("// " 0 2 (c-in-sws t composition (0 2 #3#) fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -24392) 24396 (t 23273 9701 310844 765000)) nil (23273 9711 84781 251000) 0 nil]) ((24191 . 24192)) nil (23273 9701 169344 885000) 0 nil]) ((24205 . 24225) (#("be" 0 1 (fontified t) 1 2 (fontified t)) . -24205) (undo-tree-id502 . -2) 24207) nil (23273 9701 169357 56000) 0 nil]) ((24205 . 24207)) nil (23273 9701 169359 892000) 0 nil]) ((24203 . 24205)) nil (23273 9701 169361 614000) 0 nil]) ((24191 . 24203) (#("current_" 0 8 (fontified t)) . -24191) (undo-tree-id503 . -8) 24199) nil (23273 9701 169365 271000) 0 nil]) ((24191 . 24199) (#("curre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -24191) (undo-tree-id504 . -5) 24196) nil (23273 9701 169369 341000) 0 nil]) ((24187 . 24196) (t 23273 9616 82116 722000)) nil (23273 9701 169372 20000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . 412) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) 413) nil (23273 9615 948955 216000) 0 nil]) ((#("//    Here location" 0 2 (fontified t face font-lock-comment-delimiter-face composition (0 2 #3#) c-in-sws t) 2 6 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 6 19 (fontified t face font-lock-comment-face c-in-sws t)) . -413) (undo-tree-id500 . -19) (undo-tree-id501 . -19) 432 (t 23273 9438 404103 513000)) nil (23273 9615 948964 72000) 0 nil]) ((26016 . 26017)) nil (23273 9438 307272 571000) 0 nil]) ((26007 . 26016) (#("val" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -26007) (undo-tree-id472 . -3) 26010) nil (23273 9438 307295 884000) 0 nil]) ((26004 . 26010)) nil (23273 9438 307303 111000) 0 nil]) ((25999 . 26004) (#("sl" 0 1 (fontified t) 1 2 (fontified t)) . -25999) (undo-tree-id473 . -2) 26001) nil (23273 9438 307313 365000) 0 nil]) ((25997 . 26001)) nil (23273 9438 307319 71000) 0 nil]) ((25984 . 25997) (#("curr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -25984) (undo-tree-id474 . -4) 25988) nil (23273 9438 307328 667000) 0 nil]) ((25984 . 25988)) nil (23273 9438 307333 909000) 0 nil]) ((#("current_line" 0 12 (fontified t)) . 25984) (undo-tree-id475 . -12) (undo-tree-id476 . -12)) nil (23273 9438 307344 660000) 0 nil]) ((25984 . 25996) (#("curre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -25984) (undo-tree-id477 . -5) 25989) nil (23273 9438 307354 669000) 0 nil]) ((25984 . 25989)) nil (23273 9438 307359 785000) 0 nil]) ((25963 . 25984)) nil (23273 9438 307363 299000) 0 nil]) ((25962 . 25963)) nil (23273 9438 307366 811000) 0 nil]) ((25954 . 25961) (#("add" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -25954) (undo-tree-id478 . -3) 25957) nil (23273 9438 307375 364000) 0 nil]) ((25952 . 25957)) nil (23273 9438 307380 405000) 0 nil]) ((25940 . 25952) (#("current_" 0 8 (fontified t)) . -25940) (undo-tree-id479 . -8) 25948) nil (23273 9438 307388 875000) 0 nil]) ((25940 . 25948) (#("curren" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -25940) (undo-tree-id480 . -5) (undo-tree-id481 . -6) 25946) nil (23273 9438 307401 744000) 0 nil]) ((25945 . 25946)) nil (23273 9438 307406 973000) 0 nil]) ((25940 . 25945) (#("uint value" 0 4 (fontified t face font-lock-type-face) 4 5 (fontified t) 5 10 (fontified t face font-lock-variable-name-face)) . 25940) (undo-tree-id482 . -10)) nil (23273 9438 307414 463000) 0 nil]) ((25925 . 25951) (#("uint_to" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -25925) (undo-tree-id483 . -7) 25932) nil (23273 9438 307424 289000) 0 nil]) ((25925 . 25932)) nil (23273 9438 307429 806000) 0 nil]) ((25919 . 25925)) nil (23273 9438 307433 627000) 0 nil]) ((25913 . 25919)) nil (23273 9438 307437 49000) 0 nil]) ((25912 . 25913)) nil (23273 9438 307440 306000) 0 nil]) ((25900 . 25912) (#("string_" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -25900) (undo-tree-id484 . -7) 25907) nil (23273 9438 307448 759000) 0 nil]) ((25900 . 25907)) nil (23273 9438 307453 857000) 0 nil]) ((25880 . 25900) (25879 . 25897)) nil (23273 9438 307458 718000) 0 nil]) ((25878 . 25880) (#("{" 0 1 (fontified nil)) . -25878) (25878 . 25879)) nil (23273 9438 307464 672000) 0 nil]) ((25877 . 25878)) nil (23273 9438 307469 283000) 0 nil]) ((25807 . 25853) (#(" " 0 1 (fontified nil)) . 25806) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (25807 . 25808)) nil (23273 9438 307483 271000) 0 nil]) ((25826 . 25827)) nil (23273 9438 307489 102000) 0 nil]) ((25825 . 25827) (#("\"" 0 1 (fontified nil)) . -25825) (25825 . 25826) (#("\"" 0 1 (fontified nil)) . -25825) (25825 . 25826) (#("const char *str" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 10 (fontified t face font-lock-type-face) 10 11 (fontified t) 11 12 (fontified t composition (2 1 #12=[9 57711])) 12 15 (fontified t face font-lock-variable-name-face)) . 25825)) nil (23273 9438 307496 472000) 0 nil]) ((25807 . 25841) (#("mak" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -25807) (undo-tree-id488 . -3) 25810) nil (23273 9438 307507 514000) 0 nil]) ((25809 . 25810)) nil (23273 9438 307512 589000) 0 nil]) ((25807 . 25809)) nil (23273 9438 307516 545000) 0 nil]) ((#("b" 0 1 (fontified t)) . 25807)) nil (23273 9438 307519 882000) 0 nil]) ((#("string_slice " 0 12 (fontified t face font-lock-type-face) 12 13 (fontified t)) . -25807) (undo-tree-id489 . -13) (undo-tree-id490 . -13) 25820) nil (23273 9438 307531 38000) 0 nil]) ((25802 . 25805)) nil (23273 9438 307536 206000) 0 nil]) ((25798 . 25802)) nil (23273 9438 307539 591000) 0 nil]) ((25785 . 25798) (#("curren" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -25785) (undo-tree-id491 . -4) (undo-tree-id492 . -6) 25791) nil (23273 9438 307550 666000) 0 nil]) ((25789 . 25791)) nil (23273 9438 307555 998000) 0 nil]) ((25785 . 25789) (#("string_slice a" 0 12 (fontified t face font-lock-type-face) 12 13 (fontified t) 13 14 (fontified t face font-lock-variable-name-face)) . 25785)) nil (23273 9438 307560 465000) 0 nil]) ((25765 . 25816) (#("string_slice_" 0 13 (fontified t)) . -25765) (undo-tree-id493 . -13) 25778) nil (23273 9438 307570 278000) 0 nil]) ((25765 . 25778) (#("strin" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -25765) (undo-tree-id494 . -5) 25770) nil (23273 9438 307580 381000) 0 nil]) ((25765 . 25770)) nil (23273 9438 307585 509000) 0 nil]) ((25764 . 25766) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -25764) (25764 . 25765)) nil (23273 9438 307590 942000) 0 nil]) ((25762 . 25764)) nil (23273 9438 307595 559000) 0 nil]) ((25761 . 25762) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 25761) (undo-tree-id495 . -4) (25757 . 25761) 25761) nil (23273 9438 307604 827000) 0 nil]) ((25756 . 25761) (t 23273 9201 453330 232000)) nil (23273 9438 307611 215000) 0 nil]) ((25201 . 25202)) nil (23273 9201 322593 374000) 0 nil]) ((25215 . 25235) (#("be" 0 1 (fontified t) 1 2 (fontified t)) . -25215) (undo-tree-id469 . -2) 25217) nil (23273 9201 322617 45000) 0 nil]) ((25215 . 25217)) nil (23273 9201 322623 52000) 0 nil]) ((#("occupies_space" 0 1 (fontified t) 1 9 (fontified t) 9 14 (fontified t)) . 25215) (undo-tree-id470 . -14) (undo-tree-id471 . -14) (t 23273 9152 515924 695000)) nil (23273 9201 322633 801000) 0 nil]) ((#("                " 0 16 (fontified t)) . -20794) (#("            " 0 12 (fontified t)) . -20424) (undo-tree-id461 . -12) (undo-tree-id462 . -12) (#("            " 0 12 (fontified t)) . -20244) 20448) nil (23273 9152 419255 292000) 0 nil]) ((20435 . 20448)) nil (23273 9152 419262 653000) 0 nil]) ((20434 . 20435)) nil (23273 9152 419265 943000) 0 nil]) ((20426 . 20434)) nil (23273 9152 419268 458000) 0 nil]) ((20406 . 20426) (#("be" 0 1 (fontified t) 1 2 (fontified t)) . -20406) (undo-tree-id463 . -2) 20408) nil (23273 9152 419274 797000) 0 nil]) ((20404 . 20408)) nil (23273 9152 419278 675000) 0 nil]) ((20392 . 20404) (#("curre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -20392) (undo-tree-id464 . -5) 20397) nil (23273 9152 419284 929000) 0 nil]) ((20392 . 20397)) nil (23273 9152 419288 586000) 0 nil]) ((20379 . 20392)) nil (23273 9152 419291 158000) 0 nil]) ((20748 . 20765)) nil (23273 9152 419293 426000) 0 nil]) ((20747 . 20748)) nil (23273 9152 419295 787000) 0 nil]) ((20740 . 20747)) nil (23273 9152 419298 422000) 0 nil]) ((20720 . 20740) (#("be" 0 1 (fontified t) 1 2 (fontified t)) . -20720) (undo-tree-id465 . -2) 20722) nil (23273 9152 419304 326000) 0 nil]) ((20719 . 20722)) nil (23273 9152 419308 202000) 0 nil]) ((#(":" 0 1 (fontified t composition (1 1 #5#))) . -20719) (undo-tree-id466 . -1) 20720) nil (23273 9152 419313 609000) 0 nil]) ((20719 . 20720)) nil (23273 9152 419316 868000) 0 nil]) ((20718 . 20719)) nil (23273 9152 419319 374000) 0 nil]) ((20706 . 20718) (#("curre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -20706) (undo-tree-id467 . -5) 20711) nil (23273 9152 419325 466000) 0 nil]) ((20706 . 20711)) nil (23273 9152 419329 47000) 0 nil]) ((20689 . 20706)) nil (23273 9152 419331 388000) 0 nil]) ((20243 . 20256)) nil (23273 9152 419333 883000) 0 nil]) ((20242 . 20243)) nil (23273 9152 419336 152000) 0 nil]) ((20235 . 20242)) nil (23273 9152 419338 498000) 0 nil]) ((20215 . 20235)) nil (23273 9152 419341 26000) 0 nil]) ((20213 . 20215)) nil (23273 9152 419343 741000) 0 nil]) ((20201 . 20213) (#("curre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -20201) (undo-tree-id468 . -5) 20206) nil (23273 9152 419349 578000) 0 nil]) ((20201 . 20206)) nil (23273 9152 419353 162000) 0 nil]) ((20188 . 20201) (t 23273 8948 786181 757000)) nil (23273 9152 419356 497000) 0 nil]) ((1252 . 1253)) nil (23273 8948 649346 837000) 0 nil]) ((1248 . 1252)) nil (23273 8948 649354 66000) 0 nil]) ((1227 . 1248)) nil (23273 8948 649357 226000) 0 nil]) ((1222 . 1227) (t 23273 8847 287982 258000)) nil (23273 8948 649360 395000) 0 nil]) ((24983 . 24984) (t 23273 8551 193509 298000)) nil (23273 8847 157413 986000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . 503) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) 504) nil (23273 8551 81444 971000) 0 nil]) ((#("//    Check for double macro declaration" 0 1 (composition #6=(0 2 #3#) fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 2 (composition #6# c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 6 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6 7 (c-in-sws t fontified t face font-lock-comment-face) 7 8 (c-in-sws t fontified t face font-lock-comment-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 22 (c-in-sws t fontified t face font-lock-comment-face) 22 23 (fontified t c-in-sws t face font-lock-comment-face) 23 24 (fontified t c-in-sws t face font-lock-comment-face) 24 25 (fontified t c-in-sws t face font-lock-comment-face) 25 26 (fontified t c-in-sws t face font-lock-comment-face) 26 27 (fontified t c-in-sws t face font-lock-comment-face) 27 28 (fontified t c-in-sws t face font-lock-comment-face) 28 39 (c-in-sws t fontified t face font-lock-comment-face) 39 40 (rear-nonsticky t c-in-sws t fontified t face font-lock-comment-face)) . -504) (undo-tree-id459 . -40) (undo-tree-id460 . -40) 544 (t 23273 8511 86236 551000)) nil (23273 8551 81453 609000) 0 nil]) ((3691 . 3692)) nil (23273 8510 973166 794000) 0 nil]) ((3685 . 3686)) nil (23273 8510 973171 571000) 0 nil]) ((#("e" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -3687) (undo-tree-id448 . -1) 3688) nil (23273 8510 973180 837000) 0 nil]) ((3685 . 3686)) nil (23273 8510 973183 957000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -3687) (undo-tree-id449 . -1) 3688) nil (23273 8510 973188 112000) 0 nil]) ((3687 . 3688)) nil (23273 8510 973190 392000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -3685) (undo-tree-id450 . -1) 3686) nil (23273 8510 973194 229000) 0 nil]) ((3689 . 3691)) nil (23273 8510 973196 736000) 0 nil]) ((#("d" 0 1 (fontified t face font-lock-comment-face)) . -3689) (undo-tree-id451 . -1) 3690) nil (23273 8510 973200 846000) 0 nil]) ((3682 . 3690)) nil (23273 8510 973203 301000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -3682) (undo-tree-id452 . -1) 3683) nil (23273 8510 973206 907000) 0 nil]) ((3671 . 3683)) nil (23273 8510 973209 160000) 0 nil]) ((3659 . 3671)) nil (23273 8510 973210 889000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 3659) (undo-tree-id453 . -1) 3660) nil (23273 8510 973214 428000) 0 nil]) ((3654 . 3660)) nil (23273 8510 973216 616000) 0 nil]) ((3653 . 3654)) nil (23273 8510 973218 262000) 0 nil]) ((3652 . 3653)) nil (23273 8510 973219 911000) 0 nil]) ((3646 . 3651)) nil (23273 8510 973221 614000) 0 nil]) ((3645 . 3647) (#("(" 0 1 (fontified nil face font-lock-warning-face)) . -3645) (3645 . 3646)) nil (23273 8510 973223 935000) 0 nil]) ((3639 . 3645)) nil (23273 8510 973226 299000) 0 nil]) ((3637 . 3639)) nil (23273 8510 973227 999000) 0 nil]) ((3632 . 3637) (t 23273 6285 665228 514000)) nil (23273 8510 973229 946000) 0 nil]) ((17650 . 17651)) nil (23273 6285 555009 109000) 0 nil]) ((17644 . 17649) (#("be" 0 1 (fontified t) 1 2 (fontified t)) . -17644) (undo-tree-id422 . -2) 17646) nil (23273 6285 555023 898000) 0 nil]) ((17644 . 17646)) nil (23273 6285 555026 848000) 0 nil]) ((17643 . 17644)) nil (23273 6285 555028 602000) 0 nil]) ((17625 . 17643) (#("current_" 0 8 (fontified t)) . -17625) (undo-tree-id423 . -8) 17633) nil (23273 6285 555032 689000) 0 nil]) ((17625 . 17633) (#("curren" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -17625) (undo-tree-id424 . -6) 17631) nil (23273 6285 555037 140000) 0 nil]) ((17597 . 17625) (#("                        " 0 24 (fontified t)) . 17597) 17627) nil (23273 6285 555039 935000) 0 nil]) ((17621 . 17627)) nil (23273 6285 555041 993000) 0 nil]) ((17596 . 17621)) nil (23273 6285 555043 722000) 0 nil]) ((17595 . 17596)) nil (23273 6285 555045 268000) 0 nil]) ((17592 . 17595) (#("l" 0 1 (fontified t)) . -17592) (undo-tree-id425 . -1) 17593) nil (23273 6285 555048 839000) 0 nil]) ((17591 . 17593)) nil (23273 6285 555051 81000) 0 nil]) ((#("-" 0 1 (fontified t composition #7=(13 2 #1#))) . -17591) (undo-tree-id426 . -1) (#(">" 0 1 (fontified t composition #7#)) . -17592) (undo-tree-id427 . -1) 17593) nil (23273 6285 555056 15000) 0 nil]) ((17591 . 17593)) nil (23273 6285 555058 789000) 0 nil]) ((17573 . 17591) (#("current_" 0 8 (fontified t)) . -17573) (undo-tree-id428 . -8) 17581) nil (23273 6285 555065 931000) 0 nil]) ((17573 . 17581) (#("curr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -17573) (undo-tree-id429 . -4) 17577) nil (23273 6285 555070 67000) 0 nil]) ((17573 . 17577)) nil (23273 6285 555072 536000) 0 nil]) ((#("M" 0 1 (fontified t)) . -17573) (undo-tree-id430 . -1) (#("A" 0 1 (fontified t)) . -17574) (undo-tree-id431 . -1) (#("C" 0 1 (fontified t)) . -17575) (undo-tree-id432 . -1) (#("R" 0 1 (fontified t)) . -17576) (undo-tree-id433 . -1) (#("O" 0 1 (fontified t)) . -17577) (undo-tree-id434 . -1) (#("_" 0 1 (fontified t)) . -17578) (undo-tree-id435 . -1) 17579) nil (23273 6285 555092 393000) 0 nil]) ((17573 . 17579) (#("macro" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -17573) (undo-tree-id436 . -5) 17578) nil (23273 6285 555098 351000) 0 nil]) ((17572 . 17578)) nil (23273 6285 555100 601000) 0 nil]) ((17568 . 17571)) nil (23273 6285 555102 171000) 0 nil]) ((17539 . 17567) (#("                        " 0 24 (fontified nil)) . 17539) (undo-tree-id437 . -24) (17563 . 17565) (#("(" 0 1 (fontified nil)) . -17563) (17563 . 17564)) nil (23273 6285 555106 416000) 0 nil]) ((17538 . 17563)) nil (23273 6285 555109 16000) 0 nil]) ((17537 . 17538)) nil (23273 6285 555110 500000) 0 nil]) ((17526 . 17537) (#("li" 0 1 (fontified t) 1 2 (fontified t)) . -17526) (undo-tree-id438 . -2) 17528) nil (23273 6285 555114 104000) 0 nil]) ((17524 . 17528)) nil (23273 6285 555116 435000) 0 nil]) ((17512 . 17524) (#("current_" 0 8 (fontified t)) . -17512) (undo-tree-id439 . -8) 17520) nil (23273 6285 555119 887000) 0 nil]) ((17512 . 17520) (#("current" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -17512) (undo-tree-id440 . -7) 17519) nil (23273 6285 555123 844000) 0 nil]) ((17517 . 17519)) nil (23273 6285 555126 489000) 0 nil]) ((17484 . 17512) (#("                        " 0 24 (fontified t)) . 17484) 17513) nil (23273 6285 555128 580000) 0 nil]) ((17508 . 17513)) nil (23273 6285 555130 901000) 0 nil]) ((17483 . 17508)) nil (23273 6285 555132 427000) 0 nil]) ((17482 . 17483)) nil (23273 6285 555133 879000) 0 nil]) ((17478 . 17481)) nil (23273 6285 555135 355000) 0 nil]) ((17476 . 17477)) nil (23273 6285 555136 733000) 0 nil]) ((17475 . 17476)) nil (23273 6285 555138 85000) 0 nil]) ((17473 . 17475)) nil (23273 6285 555139 489000) 0 nil]) ((17472 . 17474) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -17472) (17472 . 17473)) nil (23273 6285 555141 824000) 0 nil]) ((17455 . 17472)) nil (23273 6285 555143 987000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . -17455) (undo-tree-id441 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -17456) (undo-tree-id442 . -1) 17457) nil (23273 6285 555148 551000) 0 nil]) ((17447 . 17457)) nil (23273 6285 555150 989000) 0 nil]) ((17446 . 17447)) nil (23273 6285 555152 450000) 0 nil]) ((17436 . 17446) (17435 . 17437) (#("\"" 0 1 (fontified nil)) . -17435) (17435 . 17436) (#("\"" 0 1 (fontified nil)) . -17435) (17434 . 17436)) nil (23273 6285 555155 703000) 0 nil]) ((17433 . 17434)) nil (23273 6285 555158 163000) 0 nil]) ((17429 . 17433)) nil (23273 6285 555159 538000) 0 nil]) ((17427 . 17429)) nil (23273 6285 555160 951000) 0 nil]) ((17426 . 17428) (#("(" 0 1 (fontified nil)) . -17426) (17426 . 17427)) nil (23273 6285 555163 423000) 0 nil]) ((17419 . 17426)) nil (23273 6285 555165 514000) 0 nil]) ((17399 . 17419)) nil (23273 6285 555167 8000) 0 nil]) ((17427 . 17428)) nil (23273 6285 555168 405000) 0 nil]) ((17425 . 17426)) nil (23273 6285 555169 828000) 0 nil]) ((17424 . 17426) (#("(" 0 1 (fontified nil)) . -17424) (17424 . 17425)) nil (23273 6285 555171 953000) 0 nil]) ((17420 . 17424)) nil (23273 6285 555173 856000) 0 nil]) ((17400 . 17420) (#("                    " 0 20 (fontified nil)) . 17399) (undo-tree-id443 . -20) (17399 . 17420) (17398 . 17416)) nil (23273 6285 555178 30000) 0 nil]) ((17397 . 17399) (#("{" 0 1 (fontified nil)) . -17397) (17397 . 17398)) nil (23273 6285 555181 297000) 0 nil]) ((17396 . 17397)) nil (23273 6285 555183 239000) 0 nil]) ((17387 . 17395)) nil (23273 6285 555184 664000) 0 nil]) ((17368 . 17386) (#("current_" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . -17368) (undo-tree-id444 . -8) 17376) nil (23273 6285 555188 351000) 0 nil]) ((17368 . 17376) (#("string_slice to_search" 0 12 (fontified t face font-lock-type-face) 12 13 (fontified t) 13 22 (fontified t face font-lock-variable-name-face)) . 17368) (undo-tree-id445 . -22)) nil (23273 6285 555192 168000) 0 nil]) ((17350 . 17391) (#("search_" 0 7 (fontified t)) . -17350) (undo-tree-id446 . -7) 17357) nil (23273 6285 555196 138000) 0 nil]) ((17350 . 17357) (#("sea" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -17350) (undo-tree-id447 . -3) 17353) nil (23273 6285 555200 160000) 0 nil]) ((17350 . 17353)) nil (23273 6285 555202 479000) 0 nil]) ((17349 . 17351) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -17349) (17349 . 17350)) nil (23273 6285 555205 52000) 0 nil]) ((17347 . 17349)) nil (23273 6285 555207 157000) 0 nil]) ((17330 . 17347) (t 23273 6166 236558 676000)) nil (23273 6285 555209 215000) 0 nil]) ((#("//    Check for double label declaration
" 0 1 (composition #8=(0 2 #3#) fontified t c-in-sws t face font-lock-comment-delimiter-face) 1 2 (composition #8# c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 6 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6 7 (fontified t c-in-sws t face font-lock-comment-face) 7 8 (fontified t c-in-sws t face font-lock-comment-face) 8 9 (fontified t c-in-sws t face font-lock-comment-face) 9 10 (fontified t c-in-sws t face font-lock-comment-face) 10 11 (fontified t c-in-sws t face font-lock-comment-face) 11 12 (fontified t c-in-sws t face font-lock-comment-face) 12 13 (fontified t c-in-sws t face font-lock-comment-face) 13 14 (fontified t c-in-sws t face font-lock-comment-face) 14 15 (fontified t c-in-sws t face font-lock-comment-face) 15 16 (fontified t c-in-sws t face font-lock-comment-face) 16 17 (fontified t c-in-sws t face font-lock-comment-face) 17 40 (c-in-sws t fontified t face font-lock-comment-face) 40 41 (fontified t face font-lock-comment-face c-in-sws t)) . 504) (undo-tree-id418 . -41) (undo-tree-id419 . -41) (undo-tree-id420 . -41) (undo-tree-id421 . -41) (t 23273 6144 206183 765000)) nil (23273 6166 133771 958000) 0 nil]) ((23809 . 23810) (t 23273 6142 536155 269000)) nil (23273 6144 98194 130000) 0 nil]) ((23794 . 23809)) nil (23273 6142 433706 774000) 0 nil]) ((23780 . 23794)) nil (23273 6142 433716 780000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-comment-face)) . -23780) (undo-tree-id417 . -1) 23781) nil (23273 6142 433736 24000) 0 nil]) ((23770 . 23781)) nil (23273 6142 433742 339000) 0 nil]) ((23769 . 23770)) nil (23273 6142 433746 214000) 0 nil]) ((23768 . 23769)) nil (23273 6142 433749 602000) 0 nil]) ((23762 . 23767)) nil (23273 6142 433752 993000) 0 nil]) ((23761 . 23763) (#("(" 0 1 (fontified nil face font-lock-warning-face)) . -23761) (23761 . 23762)) nil (23273 6142 433758 499000) 0 nil]) ((23756 . 23761)) nil (23273 6142 433763 347000) 0 nil]) ((23754 . 23756)) nil (23273 6142 433766 958000) 0 nil]) ((23741 . 23754)) nil (23273 6142 433770 363000) 0 nil]) ((#("// " 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-comment-delimiter-face composition #9=(0 2 #3#)) 1 2 (fontified t c-in-sws t face font-lock-comment-delimiter-face composition #9#) 2 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -23699) 23703) nil (23273 6142 433774 796000) 0 nil]) ((24102 . 24105) (24074 . 24077) (24020 . 24023) (23963 . 23966) (23909 . 23912) (23826 . 23829) (23757 . 23760) (23699 . 23702) 24082 (t 23273 6053 501286 248000)) nil (23273 6142 433786 951000) 0 nil]) ((#(" " 0 1 (fontified t)) . 23804) (undo-tree-id409 . -1) 23805) nil (23273 6053 435420 702000) 0 nil]) ((#("!" 0 1 (composition #10=(16 2 #14=[9 57614]) fontified t face font-lock-negation-char-face)) . -23805) (undo-tree-id410 . -1) (#("=" 0 1 (composition #10# fontified t)) . -23806) (undo-tree-id411 . -1) 23807) nil (23273 6053 435432 854000) 0 nil]) ((#(" " 0 1 (fontified t)) . 23807) (undo-tree-id412 . -1) 23808) nil (23273 6053 435439 637000) 0 nil]) ((#("N" 0 1 (fontified t)) . -23808) (undo-tree-id413 . -1) (#("U" 0 1 (fontified t)) . -23809) (undo-tree-id414 . -1) (#("L" 0 1 (fontified t)) . -23810) (undo-tree-id415 . -1) (#("L" 0 1 (fontified t face font-lock-constant-face)) . -23811) (undo-tree-id416 . -1) 23812 (t 23273 6032 150912 812000)) nil (23273 6053 435452 45000) 0 nil]) ((23795 . 23796) (t 23273 5996 336948 114000)) nil (23273 6032 54998 435000) 0 nil]) ((24121 . 24132) (#("label_to" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . -24121) (undo-tree-id406 . -8) 24129) nil (23273 5996 235279 309000) 0 nil]) ((24121 . 24129)) nil (23273 5996 235284 67000) 0 nil]) ((#("current_line->tokens" 0 12 (fontified t) 12 14 (composition (13 2 #1#) fontified t) 14 20 (fontified t)) . 24121) (undo-tree-id407 . -20) (undo-tree-id408 . -20) (t 23273 5984 623406 876000)) nil (23273 5996 235292 598000) 0 nil]) ((24049 . 24050)) nil (23273 5984 550161 126000) 0 nil]) ((24043 . 24048) (#("be" 0 1 (fontified t) 1 2 (fontified t)) . -24043) (undo-tree-id392 . -2) 24045) nil (23273 5984 550173 318000) 0 nil]) ((24042 . 24045)) nil (23273 5984 550176 929000) 0 nil]) ((24037 . 24042) (#("sli" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -24037) (undo-tree-id393 . -3) 24040) nil (23273 5984 550181 791000) 0 nil]) ((24035 . 24040)) nil (23273 5984 550184 536000) 0 nil]) ((24024 . 24035) (#("label_to" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . -24024) (undo-tree-id394 . -8) 24032) nil (23273 5984 550189 18000) 0 nil]) ((24029 . 24032)) nil (23273 5984 550191 762000) 0 nil]) ((24000 . 24024) (#("                    " 0 20 (fontified t)) . 24000) 24025) nil (23273 5984 550194 754000) 0 nil]) ((24020 . 24025)) nil (23273 5984 550197 142000) 0 nil]) ((23999 . 24020)) nil (23273 5984 550199 36000) 0 nil]) ((23998 . 23999)) nil (23273 5984 550200 700000) 0 nil]) ((23995 . 23998) (#("l" 0 1 (fontified t)) . -23995) (undo-tree-id395 . -1) 23996) nil (23273 5984 550205 327000) 0 nil]) ((23994 . 23996)) nil (23273 5984 550208 100000) 0 nil]) ((23989 . 23994) (#("sl" 0 1 (fontified t) 1 2 (fontified t)) . -23989) (undo-tree-id396 . -2) 23991) nil (23273 5984 550212 277000) 0 nil]) ((23987 . 23991)) nil (23273 5984 550214 669000) 0 nil]) ((23976 . 23987) (#("label_to" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . -23976) (undo-tree-id397 . -8) 23984) nil (23273 5984 550219 193000) 0 nil]) ((23976 . 23984)) nil (23273 5984 550221 617000) 0 nil]) ((#("cu" 0 1 (fontified t) 1 2 (fontified t)) . 23976) (undo-tree-id398 . -2) (undo-tree-id399 . -2)) nil (23273 5984 550226 772000) 0 nil]) ((23777 . 23786)) nil (23273 5984 550229 726000) 0 nil]) ((23775 . 23777)) nil (23273 5984 550231 462000) 0 nil]) ((#("current_line->tokens" 0 12 (fontified t) 12 13 (composition #11=(13 2 #1#) fontified t) 13 14 (composition #11# fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t)) . 23775) (undo-tree-id400 . -20) (undo-tree-id401 . -20)) nil (23273 5984 550236 183000) 0 nil]) ((23740 . 23741)) nil (23273 5984 550238 810000) 0 nil]) ((23720 . 23740)) nil (23273 5984 550240 734000) 0 nil]) ((23705 . 23720)) nil (23273 5984 550242 966000) 0 nil]) ((23704 . 23705)) nil (23273 5984 550244 625000) 0 nil]) ((23700 . 23704)) nil (23273 5984 550246 467000) 0 nil]) ((23699 . 23700)) nil (23273 5984 550248 198000) 0 nil]) ((23686 . 23699)) nil (23273 5984 550249 962000) 0 nil]) ((23930 . 23932)) nil (23273 5984 550252 17000) 0 nil]) ((23929 . 23930)) nil (23273 5984 550253 645000) 0 nil]) ((23925 . 23928)) nil (23273 5984 550255 397000) 0 nil]) ((23900 . 23924) (#("                    " 0 20 (fontified nil)) . 23900) (undo-tree-id402 . -20) (23920 . 23922) (#("(" 0 1 (fontified nil)) . -23920) (23920 . 23921)) nil (23273 5984 550260 596000) 0 nil]) ((23899 . 23920)) nil (23273 5984 550263 727000) 0 nil]) ((23898 . 23899)) nil (23273 5984 550265 527000) 0 nil]) ((23887 . 23898) (#("li" 0 1 (fontified t) 1 2 (fontified t)) . -23887) (undo-tree-id403 . -2) 23889) nil (23273 5984 550269 794000) 0 nil]) ((23885 . 23889)) nil (23273 5984 550272 242000) 0 nil]) ((23873 . 23885) (#("current_" 0 8 (fontified t)) . -23873) (undo-tree-id404 . -8) 23881) nil (23273 5984 550276 368000) 0 nil]) ((23873 . 23881) (#("current" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -23873) (undo-tree-id405 . -7) 23880) nil (23273 5984 550281 80000) 0 nil]) ((23879 . 23880)) nil (23273 5984 550283 654000) 0 nil]) ((23849 . 23873) (#("                    " 0 20 (fontified t)) . 23849) 23875) nil (23273 5984 550286 276000) 0 nil]) ((23869 . 23875)) nil (23273 5984 550288 534000) 0 nil]) ((23848 . 23869)) nil (23273 5984 550290 275000) 0 nil]) ((23847 . 23848)) nil (23273 5984 550291 986000) 0 nil]) ((23844 . 23846)) nil (23273 5984 550293 615000) 0 nil]) ((23842 . 23843)) nil (23273 5984 550295 73000) 0 nil]) ((23841 . 23842)) nil (23273 5984 550296 715000) 0 nil]) ((23839 . 23841)) nil (23273 5984 550298 223000) 0 nil]) ((23838 . 23840) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -23838) (23838 . 23839)) nil (23273 5984 550301 1000) 0 nil]) ((23834 . 23838)) nil (23273 5984 550303 218000) 0 nil]) ((23813 . 23834)) nil (23273 5984 550305 121000) 0 nil]) ((23812 . 23813)) nil (23273 5984 550306 821000) 0 nil]) ((23802 . 23812) (23801 . 23803) (#("\"" 0 1 (fontified nil)) . -23801) (23801 . 23802) (#("\"" 0 1 (fontified nil)) . -23801) (23800 . 23802)) nil (23273 5984 550310 481000) 0 nil]) ((23799 . 23800)) nil (23273 5984 550312 966000) 0 nil]) ((23793 . 23799)) nil (23273 5984 550314 762000) 0 nil]) ((23792 . 23794) (#("(" 0 1 (fontified nil)) . -23792) (23792 . 23793)) nil (23273 5984 550317 589000) 0 nil]) ((23785 . 23792)) nil (23273 5984 550320 129000) 0 nil]) ((23768 . 23785)) nil (23273 5984 550322 31000) 0 nil]) ((23757 . 23765) (t 23273 5847 790920 177000)) nil (23273 5984 550324 457000) 0 nil]) ((#("            " 0 12 (fontified t)) . -23800) 23785) nil (23273 5847 749409 410000) 0 nil]) ((23784 . 23785)) nil (23273 5847 749417 49000) 0 nil]) ((23782 . 23783)) nil (23273 5847 749420 426000) 0 nil]) ((23781 . 23783) (#("(" 0 1 (fontified nil)) . -23781) (23781 . 23782)) nil (23273 5847 749424 653000) 0 nil]) ((23777 . 23781)) nil (23273 5847 749428 366000) 0 nil]) ((#("return" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face)) . 23777) (undo-tree-id373 . -6) (undo-tree-id374 . -6)) nil (23273 5847 749444 191000) 0 nil]) ((#(" " 0 1 (fontified t)) . 23783) (undo-tree-id375 . -1) 23784) nil (23273 5847 749451 185000) 0 nil]) ((#("8" 0 1 (fontified t)) . -23784) (undo-tree-id376 . -1) 23785) nil (23273 5847 749457 553000) 0 nil]) ((23777 . 23785)) nil (23273 5847 749460 978000) 0 nil]) ((23761 . 23777) (#("            " 0 12 (fontified nil)) . -23761) (undo-tree-id377 . -12) (#("    " 0 4 (fontified t)) . 23773)) nil (23273 5847 749467 228000) 0 nil]) ((23791 . 23804)) nil (23273 5847 749471 442000) 0 nil]) ((23761 . 23777) (23760 . 23774)) nil (23273 5847 749474 599000) 0 nil]) ((23759 . 23761) (#("{" 0 1 (fontified nil)) . -23759) (23759 . 23760)) nil (23273 5847 749478 663000) 0 nil]) ((23758 . 23759)) nil (23273 5847 749481 788000) 0 nil]) ((23749 . 23756) (#("igno" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -23749) (undo-tree-id378 . -4) 23753) nil (23273 5847 749488 63000) 0 nil]) ((23752 . 23753)) nil (23273 5847 749491 800000) 0 nil]) ((#("a" 0 1 (fontified t)) . -23752) (undo-tree-id379 . -1) 23753) nil (23273 5847 749497 346000) 0 nil]) ((23749 . 23753)) nil (23273 5847 749500 887000) 0 nil]) ((#("uint *result" 0 5 (fontified t) 5 6 (composition (2 1 #12#) fontified t) 6 12 (fontified t)) . 23749) (undo-tree-id380 . -12) (undo-tree-id381 . -12)) nil (23273 5847 749508 55000) 0 nil]) ((23685 . 23686)) nil (23273 5847 749511 821000) 0 nil]) ((23673 . 23685)) nil (23273 5847 749514 418000) 0 nil]) ((23660 . 23673)) nil (23273 5847 749517 4000) 0 nil]) ((23706 . 23721)) nil (23273 5847 749519 361000) 0 nil]) ((23694 . 23706) (#("current" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -23694) (undo-tree-id382 . -6) (undo-tree-id383 . -7) (undo-tree-id384 . -5) 23701) nil (23273 5847 749529 450000) 0 nil]) ((23700 . 23701)) nil (23273 5847 749533 105000) 0 nil]) ((23699 . 23700)) nil (23273 5847 749535 444000) 0 nil]) ((23694 . 23699) (#("string_slice to_search" 0 12 (fontified t face font-lock-type-face) 12 13 (fontified t) 13 22 (fontified t face font-lock-variable-name-face)) . 23694) (undo-tree-id385 . -22)) nil (23273 5847 749541 387000) 0 nil]) ((23676 . 23731) (#("search_" 0 7 (fontified t)) . -23676) (undo-tree-id386 . -7) 23683) nil (23273 5847 749551 307000) 0 nil]) ((23676 . 23683) (#("sea" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -23676) (undo-tree-id387 . -3) 23679) nil (23273 5847 749558 504000) 0 nil]) ((23676 . 23679)) nil (23273 5847 749562 223000) 0 nil]) ((23675 . 23677) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -23675) (23675 . 23676)) nil (23273 5847 749566 163000) 0 nil]) ((23673 . 23675)) nil (23273 5847 749569 616000) 0 nil]) ((23660 . 23673)) nil (23273 5847 749572 150000) 0 nil]) ((#("//    Check for double equ declaration
" 0 1 (composition #13=(0 2 #3#) fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 2 (composition #13# c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 6 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6 7 (c-in-sws t fontified t face font-lock-comment-face) 7 8 (c-in-sws t fontified t face font-lock-comment-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face) 15 16 (c-in-sws t fontified t face font-lock-comment-face) 16 17 (c-in-sws t fontified t face font-lock-comment-face) 17 39 (c-in-sws t fontified t face font-lock-comment-face)) . 586) (undo-tree-id388 . -39) (undo-tree-id389 . -39) (undo-tree-id390 . -39) (undo-tree-id391 . -39) (t 23273 5666 380751 56000)) nil (23273 5847 749583 757000) 0 nil]) ((14057 . 14058)) nil (23273 5666 309428 171000) 0 nil]) ((#("." 0 1 (fontified t)) . -14057) (undo-tree-id350 . -1) 14058) nil (23273 5666 309440 975000) 0 nil]) ((14057 . 14058)) nil (23273 5666 309444 122000) 0 nil]) ((14055 . 14056)) nil (23273 5666 309446 201000) 0 nil]) ((14054 . 14056) (#("(" 0 1 (fontified nil)) . -14054) (14054 . 14055)) nil (23273 5666 309449 341000) 0 nil]) ((14051 . 14054)) nil (23273 5666 309451 770000) 0 nil]) ((#("i" 0 1 (fontified t)) . -14051) (undo-tree-id351 . -1) (#("x" 0 1 (fontified t)) . -14052) (undo-tree-id352 . -1) (#("t" 0 1 (fontified t)) . -14053) (undo-tree-id353 . -1) 14054) nil (23273 5666 309462 66000) 0 nil]) ((14050 . 14054)) nil (23273 5666 309465 313000) 0 nil]) ((14033 . 14050)) nil (23273 5666 309467 266000) 0 nil]) ((14032 . 14033)) nil (23273 5666 309468 903000) 0 nil]) ((14026 . 14031) (#("be" 0 1 (fontified t) 1 2 (fontified t)) . -14026) (undo-tree-id354 . -2) 14028) nil (23273 5666 309473 233000) 0 nil]) ((14025 . 14028)) nil (23273 5666 309475 568000) 0 nil]) ((14020 . 14025) (#("sl" 0 1 (fontified t) 1 2 (fontified t)) . -14020) (undo-tree-id355 . -2) 14022) nil (23273 5666 309479 597000) 0 nil]) ((14019 . 14022)) nil (23273 5666 309482 4000) 0 nil]) ((14018 . 14019)) nil (23273 5666 309483 585000) 0 nil]) ((14007 . 14018) (#("firs" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -14007) (undo-tree-id356 . -4) 14011) nil (23273 5666 309487 551000) 0 nil]) ((14010 . 14011)) nil (23273 5666 309489 871000) 0 nil]) ((13983 . 14007) (#("                    " 0 20 (fontified t)) . 13983) 14006) nil (23273 5666 309492 309000) 0 nil]) ((14003 . 14006)) nil (23273 5666 309494 520000) 0 nil]) ((13982 . 14003)) nil (23273 5666 309495 989000) 0 nil]) ((13981 . 13982)) nil (23273 5666 309497 540000) 0 nil]) ((13978 . 13981) (#("l" 0 1 (fontified t)) . -13978) (undo-tree-id357 . -1) 13979) nil (23273 5666 309501 491000) 0 nil]) ((13977 . 13979)) nil (23273 5666 309503 861000) 0 nil]) ((13972 . 13977) (#("sl" 0 1 (fontified t) 1 2 (fontified t)) . -13972) (undo-tree-id358 . -2) 13974) nil (23273 5666 309507 906000) 0 nil]) ((13970 . 13974)) nil (23273 5666 309510 344000) 0 nil]) ((13959 . 13970) (#("fir" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -13959) (undo-tree-id359 . -3) 13962) nil (23273 5666 309514 313000) 0 nil]) ((13961 . 13962)) nil (23273 5666 309516 552000) 0 nil]) ((#("t" 0 1 (fontified t)) . -13961) (undo-tree-id360 . -1) 13962) nil (23273 5666 309520 177000) 0 nil]) ((13959 . 13962)) nil (23273 5666 309522 560000) 0 nil]) ((13958 . 13959)) nil (23273 5666 309524 125000) 0 nil]) ((13954 . 13957)) nil (23273 5666 309525 669000) 0 nil]) ((13929 . 13953) (#("                    " 0 20 (fontified nil)) . 13929) (undo-tree-id361 . -20) (13949 . 13951) (#("(" 0 1 (fontified nil)) . -13949) (13949 . 13950)) nil (23273 5666 309530 687000) 0 nil]) ((13928 . 13949)) nil (23273 5666 309533 532000) 0 nil]) ((13927 . 13928)) nil (23273 5666 309535 114000) 0 nil]) ((13916 . 13927) (#("li" 0 1 (fontified t) 1 2 (fontified t)) . -13916) (undo-tree-id362 . -2) 13918) nil (23273 5666 309539 171000) 0 nil]) ((13914 . 13918)) nil (23273 5666 309541 502000) 0 nil]) ((13902 . 13914) (#("curren" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -13902) (undo-tree-id363 . -6) 13908) nil (23273 5666 309545 773000) 0 nil]) ((13907 . 13908)) nil (23273 5666 309548 197000) 0 nil]) ((13878 . 13902) (#("                    " 0 20 (fontified t)) . 13878) 13903) nil (23273 5666 309550 511000) 0 nil]) ((13898 . 13903)) nil (23273 5666 309552 527000) 0 nil]) ((13877 . 13898)) nil (23273 5666 309554 511000) 0 nil]) ((13876 . 13877)) nil (23273 5666 309556 146000) 0 nil]) ((13872 . 13875)) nil (23273 5666 309557 828000) 0 nil]) ((13845 . 13846)) nil (23273 5666 309559 364000) 0 nil]) ((13844 . 13845)) nil (23273 5666 309560 839000) 0 nil]) ((13843 . 13844)) nil (23273 5666 309562 315000) 0 nil]) ((13842 . 13843)) nil (23273 5666 309563 809000) 0 nil]) ((13841 . 13843) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -13841) (13841 . 13842)) nil (23273 5666 309566 420000) 0 nil]) ((13840 . 13841)) nil (23273 5666 309568 594000) 0 nil]) ((13836 . 13837)) nil (23273 5666 309570 184000) 0 nil]) ((13835 . 13836)) nil (23273 5666 309571 880000) 0 nil]) ((13825 . 13835)) nil (23273 5666 309573 350000) 0 nil]) ((13841 . 13853)) nil (23273 5666 309574 939000) 0 nil]) ((13829 . 13841)) nil (23273 5666 309576 429000) 0 nil]) ((13825 . 13829)) nil (23273 5666 309577 998000) 0 nil]) ((13824 . 13826) (#("\"" 0 1 (fontified nil)) . -13824) (13824 . 13825) (#("\"" 0 1 (fontified nil)) . -13824) (13823 . 13825)) nil (23273 5666 309581 212000) 0 nil]) ((13822 . 13823)) nil (23273 5666 309583 776000) 0 nil]) ((13816 . 13822)) nil (23273 5666 309585 355000) 0 nil]) ((13815 . 13817) (#("(" 0 1 (fontified nil)) . -13815) (13815 . 13816)) nil (23273 5666 309587 786000) 0 nil]) ((13808 . 13815)) nil (23273 5666 309589 803000) 0 nil]) ((13792 . 13808) (13791 . 13805)) nil (23273 5666 309592 69000) 0 nil]) ((13790 . 13792) (#("{" 0 1 (fontified nil)) . -13790) (13790 . 13791)) nil (23273 5666 309594 898000) 0 nil]) ((13789 . 13790)) nil (23273 5666 309596 940000) 0 nil]) ((13780 . 13788)) nil (23273 5666 309598 473000) 0 nil]) ((13774 . 13779) (#("sl" 0 1 (fontified t) 1 2 (fontified t)) . -13774) (undo-tree-id364 . -2) 13776) nil (23273 5666 309602 420000) 0 nil]) ((13772 . 13776)) nil (23273 5666 309604 673000) 0 nil]) ((13761 . 13772) (#("firs" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -13761) (undo-tree-id365 . -3) (undo-tree-id366 . -4) 13765) nil (23273 5666 309609 889000) 0 nil]) ((13764 . 13765)) nil (23273 5666 309612 128000) 0 nil]) ((13761 . 13764) (#("string_slice to_search" 0 12 (fontified t face font-lock-type-face) 12 13 (fontified t) 13 22 (fontified t face font-lock-variable-name-face)) . 13761) (undo-tree-id367 . -22)) nil (23273 5666 309615 696000) 0 nil]) ((13745 . 13784) (#("search_" 0 7 (fontified t)) . -13745) (undo-tree-id368 . -7) 13752) nil (23273 5666 309620 90000) 0 nil]) ((13745 . 13752) (#("sea" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -13745) (undo-tree-id369 . -3) 13748) nil (23273 5666 309625 1000) 0 nil]) ((13745 . 13748)) nil (23273 5666 309627 467000) 0 nil]) ((13744 . 13746) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -13744) (13744 . 13745)) nil (23273 5666 309629 878000) 0 nil]) ((13742 . 13744)) nil (23273 5666 309632 67000) 0 nil]) ((13730 . 13742) (#("            " 0 12 (fontified nil)) . 13729) (undo-tree-id370 . -12) (13741 . 13742)) nil (23273 5666 309636 175000) 0 nil]) ((13729 . 13741)) nil (23273 5666 309638 392000) 0 nil]) ((710 . 728)) nil (23273 5666 309639 911000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -710) (undo-tree-id371 . -1) 711) nil (23273 5666 309643 338000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 711) (undo-tree-id372 . -1) 712) nil (23273 5666 309647 891000) 0 nil]) ((701 . 712)) nil (23273 5666 309650 290000) 0 nil]) ((699 . 701)) nil (23273 5666 309652 38000) 0 nil]) ((698 . 699) (t 23273 5356 413939 952000)) nil (23273 5666 309654 213000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#("r" 0 1 (fontified t)) . -3126) (undo-tree-id238 . -1) 3127) ((3126 . 3127)) (23273 5470 394259 422000) 0 nil]) ((3125 . 3127)) ((#("sr" 0 1 (fontified t) 1 2 (fontified t)) . 3125) (undo-tree-id274 . -2)) (23273 5470 397834 121000) 0 nil]) ((3124 . 3126) (#("(" 0 1 (fontified nil)) . -3124) (3124 . 3125)) ((#("(" 0 1 (fontified nil)) . 3124) (3124 . 3125) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 3124) (undo-tree-id275 . -1)) (23273 5470 605021 748000) 0 nil]) ((3117 . 3124)) ((#("fprintf" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 3117) (undo-tree-id276 . -7)) (23273 5470 792297 173000) 0 nil]) ((3109 . 3117) (#("    " 0 4 (fontified nil)) . -3109) (undo-tree-id239 . -4) (#("    " 0 4 (fontified t)) . 3113)) ((3109 . 3117) (#("        " 0 8 (fontified t)) . 3109) (undo-tree-id277 . -8) (undo-tree-id278 . -8) (undo-tree-id279 . -8)) (23273 5470 975437 552000) 0 nil]) ((3123 . 3128)) ((#("
    " 0 5 (fontified t)) . 3123) (undo-tree-id280 . -1) (undo-tree-id281 . -1)) (23273 5471 168513 202000) 0 nil]) ((3109 . 3117) (3108 . 3114)) ((#("

    " 0 1 (fontified t) 1 2 (fontified nil) 2 6 (fontified t)) . 3108) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -1) (undo-tree-id287 . -2) (undo-tree-id288 . -1) (undo-tree-id289 . -2) (#("        " 0 4 (fontified t) 4 8 (fontified t)) . 3109)) (23273 5471 396568 925000) 0 nil]) ((3107 . 3109) (#("{" 0 1 (fontified nil)) . -3107) (3107 . 3108)) ((#("{" 0 1 (fontified nil)) . 3107) (3107 . 3108) (#("{}" 0 1 (fontified t) 1 2 (fontified t)) . 3107) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1)) (23273 5471 824176 93000) 0 nil]) ((3106 . 3107)) ((#(" " 0 1 (fontified t)) . 3106) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1)) (23273 5472 74618 507000) 0 nil]) ((3097 . 3105)) ((#(" != NULL" 0 1 (fontified t) 1 2 (fontified t composition #15=(16 2 #14#)) 2 3 (fontified t composition #15#) 3 4 (fontified t) 4 5 (fontified t face font-lock-constant-face) 5 6 (fontified t face font-lock-constant-face) 6 7 (fontified t face font-lock-constant-face) 7 8 (fontified t face font-lock-constant-face)) . 3097)) (23273 5472 425614 233000) 0 nil]) ((3093 . 3096) (#("string_slice to_search" 0 12 (fontified t face font-lock-type-face) 12 13 (fontified t) 13 22 (fontified t face font-lock-variable-name-face)) . 3093) (undo-tree-id240 . -22)) ((3093 . 3115) (#("key" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 3093)) (23273 5472 631725 830000) 0 nil]) ((3077 . 3116) (#("searc" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -3077) (undo-tree-id241 . -5) 3082) ((3077 . 3082) (#("search_equ_dict(string_slice to_search)" 0 15 (fontified t) 15 16 (fontified t) 16 28 (fontified t face font-lock-type-face) 28 29 (fontified t) 29 38 (fontified t face font-lock-variable-name-face) 38 39 (fontified t)) . 3077) (undo-tree-id300 . -15) (undo-tree-id301 . -16)) (23273 5472 842822 362000) 0 nil]) ((3077 . 3082)) ((#("searc" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 3077) (undo-tree-id302 . -5)) (23273 5473 40476 267000) 0 nil]) ((3076 . 3078) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -3076) (3076 . 3077)) ((#("(" 0 1 (fontified nil face font-lock-keyword-face)) . 3076) (3076 . 3077) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 3076) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -2) (undo-tree-id306 . -2) (undo-tree-id307 . -2) (undo-tree-id308 . -2)) (23273 5473 246935 310000) 0 nil]) ((3074 . 3076)) ((#("if" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face)) . 3074) (undo-tree-id309 . -2) (undo-tree-id310 . -2) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -2) (undo-tree-id314 . -2)) (23273 5473 610360 225000) 0 nil]) ((3069 . 3074)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 3069) (undo-tree-id315 . -5) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -5) (undo-tree-id319 . -5) (undo-tree-id320 . -5) (undo-tree-id321 . -5) (undo-tree-id322 . -5)) (23273 5473 924310 929000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3014) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) 3015) ((3014 . 3015)) (23273 5474 205227 251000) 0 nil]) ((2735 . 3015)) ((#("Token* search_equ_dict(string_slice to_search) {
    Token* result = NULL;

    for(int i = 0; i < equ_dict_count; i++) {
        if(string_slice_equals(to_search, equ_dict[i].key)) {
            result = equ_dict[i].data;
            break;
        }
    }

    return result;
}
" 0 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face) 5 6 (fontified t composition (2 1 #12#)) 6 7 (fontified t) 7 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t c-type c-decl-arg-start) 23 35 (fontified t face font-lock-type-face) 35 36 (fontified t) 36 45 (fontified t face font-lock-variable-name-face) 45 51 (fontified t) 51 53 (fontified t) 53 57 (fontified t face font-lock-type-face) 57 58 (fontified t c-type c-decl-id-start face font-lock-type-face) 58 59 (fontified t composition (2 1 #12#)) 59 60 (fontified t) 60 66 (fontified t face font-lock-variable-name-face) 66 69 (fontified t) 69 73 (fontified t face font-lock-constant-face) 73 75 (fontified t) 75 80 (fontified t) 80 83 (fontified t face font-lock-keyword-face) 83 84 (fontified t) 84 86 (fontified t face font-lock-type-face) 86 87 (fontified t c-type c-decl-id-start face font-lock-type-face) 87 88 (fontified t) 88 89 (fontified t face font-lock-variable-name-face) 89 116 (fontified t) 116 118 (fontified t composition (7 2 [9 57656])) 118 130 (fontified t) 130 132 (fontified t face font-lock-keyword-face) 132 186 (fontified t) 186 223 (fontified t) 223 235 (fontified t) 235 240 (fontified t face font-lock-keyword-face) 240 263 (fontified t) 263 269 (fontified t face font-lock-keyword-face) 269 278 (fontified t) 278 279 (fontified t) 279 280 (fontified t)) . 2735) (undo-tree-id323 . -280) (undo-tree-id324 . -280) (undo-tree-id325 . -223) (undo-tree-id326 . -223) (undo-tree-id327 . -184) (undo-tree-id328 . -184) (undo-tree-id329 . -49) (undo-tree-id330 . -49) (undo-tree-id331 . -122) (undo-tree-id332 . -122) (undo-tree-id333 . -76) (undo-tree-id334 . -76) (undo-tree-id335 . -278) (undo-tree-id336 . -278) (undo-tree-id337 . -259) (undo-tree-id338 . -259) (undo-tree-id339 . -258) (undo-tree-id340 . -258) (undo-tree-id341 . -252) (undo-tree-id342 . -252) (undo-tree-id343 . -242) (undo-tree-id344 . -242) (undo-tree-id345 . -280) (undo-tree-id346 . -75) (undo-tree-id347 . -75)) (23273 5474 793465 987000) 0 nil]) ((2735 . 2736)) ((#("
" 0 1 (fontified t)) . 2735) (undo-tree-id348 . -1) (undo-tree-id349 . -1)) (23273 5475 60897 292000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3270) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) 3271) ((3270 . 3271)) (23273 5475 404048 337000) 0 nil]) ((#("Token* search_equ_dict(string_slice to_search) {
    Token* result = NULL;

    for(int i = 0; i < equ_dict_count; i++) {
        if(string_slice_equals(to_search, equ_dict[i].key)) {
            result = equ_dict[i].data;
            break;
        }
    }

    return result;
}
" 0 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face) 5 6 (fontified t) 6 7 (fontified t) 7 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t c-type c-decl-arg-start) 23 35 (fontified t face font-lock-type-face) 35 36 (fontified t) 36 45 (fontified t face font-lock-variable-name-face) 45 51 (fontified t) 51 53 (fontified t) 53 57 (fontified t face font-lock-type-face) 57 58 (fontified t c-type c-decl-id-start face font-lock-type-face) 58 59 (fontified t) 59 60 (fontified t) 60 66 (fontified t face font-lock-variable-name-face) 66 69 (fontified t) 69 73 (fontified t face font-lock-constant-face) 73 75 (fontified t) 75 80 (fontified t) 80 83 (fontified t face font-lock-keyword-face) 83 84 (fontified t) 84 86 (fontified t face font-lock-type-face) 86 87 (fontified t c-type c-decl-id-start face font-lock-type-face) 87 88 (fontified t) 88 89 (fontified t face font-lock-variable-name-face) 89 116 (fontified t) 116 118 (fontified t) 118 130 (fontified t) 130 132 (fontified t face font-lock-keyword-face) 132 186 (fontified t) 186 223 (fontified t) 223 235 (fontified t) 235 240 (fontified t face font-lock-keyword-face) 240 263 (fontified t) 263 269 (fontified t face font-lock-keyword-face) 269 280 (fontified t)) . 3272) (undo-tree-id248 . -280) (undo-tree-id249 . -280) (undo-tree-id250 . -280) (undo-tree-id251 . -252) (undo-tree-id252 . -252) (undo-tree-id253 . -49) (undo-tree-id254 . -49) (undo-tree-id255 . -278) (undo-tree-id256 . -278) (undo-tree-id257 . -184) (undo-tree-id258 . -184) (undo-tree-id259 . -259) (undo-tree-id260 . -259) (undo-tree-id261 . -122) (undo-tree-id262 . -122) (undo-tree-id263 . -76) (undo-tree-id264 . -76) (undo-tree-id265 . -223) (undo-tree-id266 . -223) (undo-tree-id267 . -75) (undo-tree-id268 . -75) (undo-tree-id269 . -242) (undo-tree-id270 . -242) (undo-tree-id271 . -258) (undo-tree-id272 . -258) (undo-tree-id273 . -280) (t 23273 5356 413939 952000)) ((3272 . 3552)) (23273 5475 607231 467000) 0 nil]) ((568 . 573)) nil (23273 5476 804419 721000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -568) (undo-tree-id229 . -1) (#("q" 0 1 (fontified t face font-lock-comment-face)) . -569) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("u" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -570) (undo-tree-id232 . -1) (undo-tree-id233 . -1) 571) nil (23273 5356 344682 106000) 0 nil]) ((#("
" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . 544) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) 545) nil (23273 5356 344697 190000) 0 nil]) ((nil rear-nonsticky nil 583 . 584) (545 . 584)) nil (23273 5356 344701 848000) 0 nil]) ((544 . 545) (t 23273 5311 159489 477000)) nil (23273 5356 344705 261000) 0 nil]) ((561 . 562)) nil (23273 5311 91418 4000) 0 nil]) ((#("D" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -561) (undo-tree-id219 . -1) 562) nil (23273 5311 91437 569000) 0 nil]) ((560 . 561)) nil (23273 5311 91443 82000) 0 nil]) ((551 . 560)) nil (23273 5311 91446 455000) 0 nil]) ((520 . 521)) nil (23273 5311 91449 766000) 0 nil]) ((#("D" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -520) (undo-tree-id220 . -1) 521) nil (23273 5311 91456 785000) 0 nil]) ((513 . 520)) nil (23273 5311 91461 306000) 0 nil]) ((#("k" 0 1 (fontified t face font-lock-comment-face)) . -513) (undo-tree-id221 . -1) 514) nil (23273 5311 91468 675000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . 514) (undo-tree-id222 . -1) 515) nil (23273 5311 91476 355000) 0 nil]) ((510 . 515)) nil (23273 5311 91480 880000) 0 nil]) ((#("
" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . 578) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 579) nil (23273 5311 91498 469000) 0 nil]) ((#("//    Line numbers" 0 1 (composition #16=(0 2 #3#) fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 2 (composition #16# c-in-sws t fontified t face font-lock-comment-delimiter-face) 2 6 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6 18 (c-in-sws t fontified t face font-lock-comment-face)) . 579) (undo-tree-id227 . -18) (undo-tree-id228 . -18) (t 23273 5266 988754 10000)) nil (23273 5311 91509 531000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . -26492) (undo-tree-id210 . -1) 26493) nil (23273 5266 924673 630000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . -26173) (undo-tree-id211 . -1) 26174) nil (23273 5266 924681 219000) 0 nil]) ((22848 . 22849) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -22848) (22848 . 22849)) nil (23273 5266 924684 359000) 0 nil]) ((#("[" 0 1 (fontified nil face font-lock-string-face)) . -22848) (undo-tree-id212 . -1) (#("]" 0 1 (fontified t face font-lock-string-face)) . 22849)) nil (23273 5266 924688 646000) 0 nil]) ((22848 . 22850) (#("[" 0 1 (fontified nil face font-lock-string-face)) . -22848) (22848 . 22849)) nil (23273 5266 924691 581000) 0 nil]) ((#("(" 0 1 (fontified t face font-lock-string-face)) . -22848) (undo-tree-id213 . -1) 22849) nil (23273 5266 924695 314000) 0 nil]) ((nil rear-nonsticky nil 22604 . 22605) (22594 . 22605)) nil (23273 5266 924697 868000) 0 nil]) ((22593 . 22594)) nil (23273 5266 924699 441000) 0 nil]) ((22580 . 22584)) nil (23273 5266 924700 991000) 0 nil]) ((#("has" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face)) . 22580) (undo-tree-id214 . -3) 22583) nil (23273 5266 924704 351000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 22579) (undo-tree-id215 . -1) (undo-tree-id216 . -1) 22580) nil (23273 5266 924709 295000) 0 nil]) ((#("at line: %d" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face)) . 22580) (undo-tree-id217 . -11) (undo-tree-id218 . -11) 22591 (t 23273 5181 444212 617000)) nil (23273 5266 924714 707000) 0 nil]) ((19765 . 19776) (#("lin" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -19765) (undo-tree-id207 . -3) 19768) nil (23273 5181 322509 13000) 0 nil]) ((19763 . 19768)) nil (23273 5181 322515 286000) 0 nil]) ((19751 . 19763) (#("current" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -19751) (undo-tree-id208 . -7) 19758) nil (23273 5181 322520 428000) 0 nil]) ((19757 . 19758)) nil (23273 5181 322523 100000) 0 nil]) ((19727 . 19751) (#("                    " 0 20 (fontified t)) . 19727) 19753) nil (23273 5181 322528 543000) 0 nil]) ((19747 . 19753)) nil (23273 5181 322530 746000) 0 nil]) ((19726 . 19747)) nil (23273 5181 322532 304000) 0 nil]) ((19725 . 19726)) nil (23273 5181 322533 795000) 0 nil]) ((19641 . 19665) (#(" " 0 1 (fontified nil)) . 19640) (undo-tree-id209 . -1) (19641 . 19642)) nil (23273 5181 322538 94000) 0 nil]) ((19686 . 19697) (t 23273 5151 227118 128000)) nil (23273 5181 322541 30000) 0 nil]) ((18481 . 18492) (#("lin" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -18481) (undo-tree-id204 . -3) 18484) nil (23273 5151 159280 64000) 0 nil]) ((18479 . 18484)) nil (23273 5151 159285 510000) 0 nil]) ((18467 . 18479) (#("current_" 0 8 (fontified t)) . -18467) (undo-tree-id205 . -8) 18475) nil (23273 5151 159290 166000) 0 nil]) ((18467 . 18475) (#("curren" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -18467) (undo-tree-id206 . -6) 18473) nil (23273 5151 159294 749000) 0 nil]) ((18471 . 18473)) nil (23273 5151 159296 989000) 0 nil]) ((18443 . 18467) (#("                    " 0 20 (fontified t)) . 18443) 18467) nil (23273 5151 159299 323000) 0 nil]) ((18463 . 18467)) nil (23273 5151 159301 503000) 0 nil]) ((18442 . 18463)) nil (23273 5151 159303 108000) 0 nil]) ((18441 . 18442)) nil (23273 5151 159304 481000) 0 nil]) ((18371 . 18374)) nil (23273 5151 159306 94000) 0 nil]) ((18370 . 18371)) nil (23273 5151 159307 442000) 0 nil]) ((18362 . 18370) (t 23273 5110 389872 269000)) nil (23273 5151 159309 564000) 0 nil]) ((13604 . 13615)) nil (23273 5110 328661 920000) 0 nil]) ((13602 . 13604)) nil (23273 5110 328667 809000) 0 nil]) ((13590 . 13602) (#("curren" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -13590) (undo-tree-id202 . -6) 13596) nil (23273 5110 328679 361000) 0 nil]) ((13595 . 13596)) nil (23273 5110 328682 257000) 0 nil]) ((13566 . 13590) (#("                    " 0 20 (fontified t)) . 13566) 13591) nil (23273 5110 328684 689000) 0 nil]) ((13586 . 13591)) nil (23273 5110 328686 933000) 0 nil]) ((13565 . 13586)) nil (23273 5110 328688 389000) 0 nil]) ((13564 . 13565)) nil (23273 5110 328689 775000) 0 nil]) ((13454 . 13457)) nil (23273 5110 328691 272000) 0 nil]) ((13453 . 13454)) nil (23273 5110 328692 625000) 0 nil]) ((13445 . 13453)) nil (23273 5110 328694 303000) 0 nil]) ((13450 . 13474) (#(" " 0 1 (fontified nil)) . 13449) (undo-tree-id203 . -1) (13450 . 13451) (t 23273 5075 96037 367000)) nil (23273 5110 328698 752000) 0 nil]) ((12046 . 12057) (#("li" 0 1 (fontified t) 1 2 (fontified t)) . -12046) (undo-tree-id200 . -2) 12048) nil (23273 5074 979119 81000) 0 nil]) ((12044 . 12048)) nil (23273 5074 979124 294000) 0 nil]) ((12032 . 12044) (#("curren" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -12032) (undo-tree-id201 . -6) 12038) nil (23273 5074 979128 672000) 0 nil]) ((12037 . 12038)) nil (23273 5074 979130 965000) 0 nil]) ((12008 . 12032) (#("                    " 0 20 (fontified t)) . 12008) 12033) nil (23273 5074 979135 791000) 0 nil]) ((12028 . 12033)) nil (23273 5074 979137 832000) 0 nil]) ((12007 . 12028)) nil (23273 5074 979139 363000) 0 nil]) ((12006 . 12007)) nil (23273 5074 979141 51000) 0 nil]) ((11896 . 11899)) nil (23273 5074 979142 612000) 0 nil]) ((11895 . 11896)) nil (23273 5074 979144 97000) 0 nil]) ((11887 . 11895) (t 23273 5043 875592 858000)) nil (23273 5074 979146 100000) 0 nil]) ((8208 . 8219) (#("li" 0 1 (fontified t) 1 2 (fontified t)) . -8208) (undo-tree-id196 . -2) 8210) nil (23273 5043 791714 982000) 0 nil]) ((8208 . 8210)) nil (23273 5043 791726 114000) 0 nil]) ((#("c" 0 1 (fontified t)) . -8208) (undo-tree-id197 . -1) 8209) nil (23273 5043 791735 939000) 0 nil]) ((8206 . 8209)) nil (23273 5043 791741 141000) 0 nil]) ((8194 . 8206) (#("current_" 0 8 (fontified t)) . -8194) (undo-tree-id198 . -8) 8202) nil (23273 5043 791750 506000) 0 nil]) ((8194 . 8202) (#("curr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -8194) (undo-tree-id199 . -4) 8198) nil (23273 5043 791760 946000) 0 nil]) ((8193 . 8198)) nil (23273 5043 791766 12000) 0 nil]) ((8192 . 8193)) nil (23273 5043 791769 813000) 0 nil]) ((8136 . 8139)) nil (23273 5043 791773 555000) 0 nil]) ((8135 . 8136)) nil (23273 5043 791776 886000) 0 nil]) ((8127 . 8135)) nil (23273 5043 791780 575000) 0 nil]) ((8122 . 8124) (t 23273 4887 683355 497000)) nil (23273 5043 791785 105000) 0 nil]) ((#("

            " 0 1 (fontified t) 1 2 (fontified t) 2 14 (fontified t)) . -22116) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -1) (undo-tree-id187 . -1)) nil (23273 4887 567661 740000) 0 nil]) ((#("if(!current_line->tokens->next_token) {
                fprintf(stderr, \"ORG with no argument!\\n\");
                exit(8);
            }" 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 4 (fontified t face font-lock-negation-char-face) 4 16 (fontified t) 16 18 (composition (13 2 #1#) fontified t) 18 24 (fontified t) 24 26 (composition (13 2 #1#) fontified t) 26 56 (fontified t) 56 72 (fontified t) 72 77 (fontified t face font-lock-string-face) 77 94 (fontified t face font-lock-string-face) 94 97 (fontified t face font-lock-string-face) 97 100 (fontified t) 100 138 (fontified t)) . 22116) (undo-tree-id188 . -138) (undo-tree-id189 . -100) (undo-tree-id190 . -100) (undo-tree-id191 . -40) (undo-tree-id192 . -40) (undo-tree-id193 . -125) (undo-tree-id194 . -125) (undo-tree-id195 . -138) (t 23273 4767 761618 934000)) nil (23273 4887 567685 1000) 0 nil]) ((#("    " 0 4 (fontified t)) . -5573) (undo-tree-id174 . -4) (undo-tree-id175 . -4) 5577) nil (23273 4767 698286 221000) 0 nil]) ((5572 . 5577)) nil (23273 4767 698290 986000) 0 nil]) ((5565 . 5566)) nil (23273 4767 698293 135000) 0 nil]) ((5564 . 5565)) nil (23273 4767 698294 957000) 0 nil]) ((5561 . 5564)) nil (23273 4767 698296 780000) 0 nil]) ((5542 . 5561) (#("current_line" 0 12 (fontified t)) . -5542) (undo-tree-id176 . -12) 5554) nil (23273 4767 698301 458000) 0 nil]) ((5542 . 5554) (#("curre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -5542) (undo-tree-id177 . -5) 5547) nil (23273 4767 698306 894000) 0 nil]) ((5542 . 5547)) nil (23273 4767 698309 752000) 0 nil]) ((5534 . 5542) (5533 . 5539)) nil (23273 4767 698312 387000) 0 nil]) ((5532 . 5534) (#("{" 0 1 (fontified nil)) . -5532) (5532 . 5533)) nil (23273 4767 698315 342000) 0 nil]) ((5531 . 5532)) nil (23273 4767 698317 654000) 0 nil]) ((5514 . 5531)) nil (23273 4767 698319 715000) 0 nil]) ((5509 . 5514)) nil (23273 4767 698321 496000) 0 nil]) ((5873 . 5874)) nil (23273 4767 698323 192000) 0 nil]) ((5854 . 5873) (#("current_line" 0 12 (fontified t)) . -5854) (undo-tree-id178 . -12) 5866) nil (23273 4767 698327 835000) 0 nil]) ((5854 . 5866) (#("curr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -5854) (undo-tree-id179 . -4) 5858) nil (23273 4767 698332 972000) 0 nil]) ((5855 . 5858)) nil (23273 4767 698335 707000) 0 nil]) ((5851 . 5855)) nil (23273 4767 698337 724000) 0 nil]) ((5840 . 5851) (#("li" 0 1 (fontified t) 1 2 (fontified t)) . -5840) (undo-tree-id180 . -2) 5842) nil (23273 4767 698342 298000) 0 nil]) ((5838 . 5842)) nil (23273 4767 698344 741000) 0 nil]) ((5826 . 5838) (#("curre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -5826) (undo-tree-id181 . -5) 5831) nil (23273 4767 698349 435000) 0 nil]) ((5826 . 5831)) nil (23273 4767 698351 954000) 0 nil]) ((5817 . 5826)) nil (23273 4767 698354 159000) 0 nil]) ((5998 . 5999)) nil (23273 4767 698355 884000) 0 nil]) ((5996 . 5998)) nil (23273 4767 698357 638000) 0 nil]) ((5977 . 5996) (#("current_line" 0 12 (fontified t)) . -5977) (undo-tree-id182 . -12) 5989) nil (23273 4767 698361 793000) 0 nil]) ((5977 . 5989) (#("curren" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -5977) (undo-tree-id183 . -6) 5983) nil (23273 4767 698367 108000) 0 nil]) ((5977 . 5983)) nil (23273 4767 698369 475000) 0 nil]) ((5968 . 5977)) nil (23273 4767 698371 219000) 0 nil]) ((5508 . 5509)) nil (23273 4767 698372 853000) 0 nil]) ((5501 . 5508)) nil (23273 4767 698374 466000) 0 nil]) ((5480 . 5501)) nil (23273 4767 698376 225000) 0 nil]) ((5475 . 5480) (t 23273 4600 479160 200000)) nil (23273 4767 698378 510000) 0 nil]) ((#("                " 0 16 (fontified t)) . -7765) 7873) nil (23273 4600 325704 225000) 0 nil]) ((7872 . 7873)) nil (23273 4600 325713 178000) 0 nil]) ((7869 . 7870) (7868 . 7870) (#("\"" 0 1 (fontified nil)) . -7868) (7868 . 7869) (#("\"" 0 1 (fontified nil)) . -7868) (7868 . 7869) (#("const char *str" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 10 (fontified t face font-lock-type-face) 10 11 (fontified t) 11 12 (fontified t composition ((1 . "	"))) 12 15 (fontified t face font-lock-variable-name-face)) . 7868) (undo-tree-id166 . -15) (undo-tree-id167 . -15)) nil (23273 4600 325737 721000) 0 nil]) ((7850 . 7884) (#("make_s" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -7850) (undo-tree-id168 . -6) 7856) nil (23273 4600 325751 215000) 0 nil]) ((7844 . 7856)) nil (23273 4600 325756 614000) 0 nil]) ((#("o" 0 1 (fontified t)) . -7844) (undo-tree-id169 . -1) 7845) nil (23273 4600 325765 147000) 0 nil]) ((7842 . 7845)) nil (23273 4600 325770 125000) 0 nil]) ((7820 . 7821)) nil (23273 4600 325774 128000) 0 nil]) ((#(":" 0 1 (fontified t face font-lock-string-face composition (1 1 #5#))) . -7820) (undo-tree-id170 . -1) 7821) nil (23273 4600 325781 738000) 0 nil]) ((nil rear-nonsticky nil 7821 . 7822) (7804 . 7822)) nil (23273 4600 325787 548000) 0 nil]) ((7838 . 7839)) nil (23273 4600 325791 474000) 0 nil]) ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . -7838) (undo-tree-id171 . -1) (undo-tree-id172 . -1)) nil (23273 4600 325801 290000) 0 nil]) ((7808 . 7824) (7807 . 7821)) nil (23273 4600 325807 333000) 0 nil]) ((7806 . 7808) (#("{" 0 1 (fontified nil)) . -7806) (7806 . 7807)) nil (23273 4600 325813 267000) 0 nil]) ((7805 . 7806)) nil (23273 4600 325817 797000) 0 nil]) ((7803 . 7805) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -7803) (7803 . 7804)) nil (23273 4600 325823 89000) 0 nil]) ((7801 . 7803)) nil (23273 4600 325827 944000) 0 nil]) ((7800 . 7801) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 7800) (undo-tree-id173 . -4) (7796 . 7800) 7800) nil (23273 4600 325837 556000) 0 nil]) ((7795 . 7800)) nil (23273 4600 325843 225000) 0 nil]) ((7796 . 7808) (#(" " 0 1 (fontified nil)) . 7796) (7795 . 7796)) nil (23273 4600 325848 614000) 0 nil]) ((#("}" 0 1 (fontified nil)) . 7781) (7781 . 7782) (#("}" 0 1 (fontified nil)) . -7781) (7781 . 7782)) nil (23273 4600 325855 821000) 0 nil]) ((7764 . 7781) (t 23273 3249 433659 148000)) nil (23273 4600 325861 861000) 0 nil]) ((621 . 633)) nil (23273 3249 321579 497000) 0 nil]) ((604 . 616)) nil (23273 3249 321585 42000) 0 nil]) ((#("L" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -604) (undo-tree-id155 . -1) 605) nil (23273 3249 321595 714000) 0 nil]) ((607 . 610)) nil (23273 3249 321598 646000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-comment-face)) . -607) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -608) (undo-tree-id158 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -609) (undo-tree-id159 . -1) 610) nil (23273 3249 321606 928000) 0 nil]) ((600 . 610)) nil (23273 3249 321610 315000) 0 nil]) ((598 . 600)) nil (23273 3249 321611 913000) 0 nil]) ((597 . 598)) nil (23273 3249 321613 550000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . 503) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) 504) nil (23273 3249 321623 547000) 0 nil]) ((#("//    ORG" 0 1 (fontified t face font-lock-comment-delimiter-face composition #17=(0 2 #3#) c-in-sws t) 1 2 (fontified t face font-lock-comment-delimiter-face composition #17# c-in-sws t) 2 6 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 6 9 (fontified t face font-lock-comment-face c-in-sws t)) . 504) (undo-tree-id164 . -9) (undo-tree-id165 . -9) (t 23273 3062 444747 109000)) nil (23273 3249 321629 276000) 0 nil]) ((22225 . 22227) (t 23273 3046 554556 328000)) nil (23273 3062 376284 375000) 0 nil]) ((#("            " 0 12 (fontified t)) . -22559) 22544) nil (23273 3046 473308 631000) 0 nil]) ((22543 . 22544)) nil (23273 3046 473314 402000) 0 nil]) ((22541 . 22542)) nil (23273 3046 473316 530000) 0 nil]) ((22540 . 22542) (#("(" 0 1 (fontified nil)) . -22540) (22540 . 22541)) nil (23273 3046 473319 167000) 0 nil]) ((22536 . 22540)) nil (23273 3046 473321 741000) 0 nil]) ((#("return " 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t)) . 22536) (undo-tree-id129 . -7) (undo-tree-id130 . -7)) nil (23273 3046 473332 598000) 0 nil]) ((22536 . 22543)) nil (23273 3046 473334 917000) 0 nil]) ((22519 . 22536)) nil (23273 3046 473336 384000) 0 nil]) ((22518 . 22519)) nil (23273 3046 473337 950000) 0 nil]) ((22512 . 22517) (#("be" 0 1 (fontified t) 1 2 (fontified t)) . -22512) (undo-tree-id131 . -2) 22514) nil (23273 3046 473341 921000) 0 nil]) ((22511 . 22514)) nil (23273 3046 473344 137000) 0 nil]) ((22506 . 22511) (#("sl" 0 1 (fontified t) 1 2 (fontified t)) . -22506) (undo-tree-id132 . -2) 22508) nil (23273 3046 473348 229000) 0 nil]) ((22504 . 22508)) nil (23273 3046 473350 558000) 0 nil]) ((22493 . 22504) (#("value" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -22493) (undo-tree-id133 . -5) 22498) nil (23273 3046 473354 601000) 0 nil]) ((22497 . 22498)) nil (23273 3046 473356 739000) 0 nil]) ((22469 . 22493) (#("                    " 0 20 (fontified t)) . 22469) 22493) nil (23273 3046 473358 972000) 0 nil]) ((22489 . 22493)) nil (23273 3046 473361 54000) 0 nil]) ((22468 . 22489)) nil (23273 3046 473362 528000) 0 nil]) ((22467 . 22468)) nil (23273 3046 473364 72000) 0 nil]) ((22464 . 22467) (#("l" 0 1 (fontified t)) . -22464) (undo-tree-id134 . -1) 22465) nil (23273 3046 473367 897000) 0 nil]) ((22463 . 22465)) nil (23273 3046 473370 256000) 0 nil]) ((22458 . 22463) (#("sl" 0 1 (fontified t) 1 2 (fontified t)) . -22458) (undo-tree-id135 . -2) 22460) nil (23273 3046 473374 16000) 0 nil]) ((22459 . 22460)) nil (23273 3046 473376 272000) 0 nil]) ((#("i" 0 1 (fontified t)) . -22459) (undo-tree-id136 . -1) 22460) nil (23273 3046 473380 185000) 0 nil]) ((22456 . 22460)) nil (23273 3046 473382 315000) 0 nil]) ((22445 . 22456) (#("value" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -22445) (undo-tree-id137 . -5) 22450) nil (23273 3046 473386 21000) 0 nil]) ((22449 . 22450)) nil (23273 3046 473388 132000) 0 nil]) ((#("w" 0 1 (fontified t)) . -22449) (undo-tree-id138 . -1) 22450) nil (23273 3046 473391 499000) 0 nil]) ((22445 . 22450)) nil (23273 3046 473393 702000) 0 nil]) ((22444 . 22445)) nil (23273 3046 473395 151000) 0 nil]) ((22440 . 22443)) nil (23273 3046 473396 668000) 0 nil]) ((22415 . 22439) (#("                    " 0 20 (fontified nil)) . 22415) (undo-tree-id139 . -20) (22435 . 22437) (#("(" 0 1 (fontified nil)) . -22435) (22435 . 22436)) nil (23273 3046 473401 15000) 0 nil]) ((22414 . 22435)) nil (23273 3046 473403 695000) 0 nil]) ((22413 . 22414)) nil (23273 3046 473405 250000) 0 nil]) ((22402 . 22413) (#("li" 0 1 (fontified t) 1 2 (fontified t)) . -22402) (undo-tree-id140 . -2) 22404) nil (23273 3046 473409 40000) 0 nil]) ((22400 . 22404)) nil (23273 3046 473411 463000) 0 nil]) ((22388 . 22400) (#("current_" 0 8 (fontified t)) . -22388) (undo-tree-id141 . -8) 22396) nil (23273 3046 473415 242000) 0 nil]) ((22388 . 22396) (#("curren" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -22388) (undo-tree-id142 . -6) 22394) nil (23273 3046 473419 885000) 0 nil]) ((22393 . 22394)) nil (23273 3046 473422 1000) 0 nil]) ((22364 . 22388) (#("                    " 0 20 (fontified t)) . 22364) 22389) nil (23273 3046 473424 338000) 0 nil]) ((22387 . 22389)) nil (23273 3046 473426 456000) 0 nil]) ((#("e" 0 1 (fontified t)) . -22387) (undo-tree-id143 . -1) 22388) nil (23273 3046 473430 3000) 0 nil]) ((22384 . 22388)) nil (23273 3046 473432 71000) 0 nil]) ((22363 . 22384)) nil (23273 3046 473433 538000) 0 nil]) ((22362 . 22363)) nil (23273 3046 473435 60000) 0 nil]) ((22359 . 22361)) nil (23273 3046 473436 531000) 0 nil]) ((22358 . 22359)) nil (23273 3046 473437 879000) 0 nil]) ((22356 . 22357)) nil (23273 3046 473439 201000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . -22354) (undo-tree-id144 . -1) 22355) nil (23273 3046 473442 730000) 0 nil]) ((22356 . 22357)) nil (23273 3046 473444 736000) 0 nil]) ((22353 . 22356)) nil (23273 3046 473446 193000) 0 nil]) ((22352 . 22354) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -22352) (22352 . 22353)) nil (23273 3046 473448 702000) 0 nil]) ((22337 . 22352)) nil (23273 3046 473450 743000) 0 nil]) ((22328 . 22337)) nil (23273 3046 473452 196000) 0 nil]) ((22327 . 22328)) nil (23273 3046 473453 763000) 0 nil]) ((22315 . 22327)) nil (23273 3046 473455 264000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-string-face)) . -22315) (undo-tree-id145 . -1) 22316) nil (23273 3046 473458 493000) 0 nil]) ((22314 . 22316)) nil (23273 3046 473460 536000) 0 nil]) ((22313 . 22315) (#("\"" 0 1 (fontified nil)) . -22313) (22313 . 22314) (#("\"" 0 1 (fontified nil)) . -22313) (22312 . 22314)) nil (23273 3046 473463 414000) 0 nil]) ((22311 . 22312)) nil (23273 3046 473465 776000) 0 nil]) ((22305 . 22311)) nil (23273 3046 473467 433000) 0 nil]) ((22304 . 22306) (#("(" 0 1 (fontified nil)) . -22304) (22304 . 22305)) nil (23273 3046 473469 725000) 0 nil]) ((22297 . 22304)) nil (23273 3046 473471 839000) 0 nil]) ((#("i" 0 1 (fontified t)) . -22297) (undo-tree-id146 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -22298) (undo-tree-id147 . -1) 22299) nil (23273 3046 473484 14000) 0 nil]) ((22297 . 22299)) nil (23273 3046 473486 457000) 0 nil]) ((22281 . 22297) (#("            " 0 12 (fontified nil)) . -22281) (undo-tree-id148 . -12) (#("    " 0 4 (fontified t)) . 22293)) nil (23273 3046 473492 349000) 0 nil]) ((22311 . 22324)) nil (23273 3046 473494 836000) 0 nil]) ((22192 . 22193)) nil (23273 3046 473496 346000) 0 nil]) ((22190 . 22191)) nil (23273 3046 473497 809000) 0 nil]) ((22189 . 22191) (#("(" 0 1 (fontified nil)) . -22189) (22189 . 22190)) nil (23273 3046 473500 163000) 0 nil]) ((22185 . 22189)) nil (23273 3046 473502 144000) 0 nil]) ((22168 . 22185)) nil (23273 3046 473503 622000) 0 nil]) ((22256 . 22272) (22255 . 22269)) nil (23273 3046 473505 540000) 0 nil]) ((22254 . 22256) (#("{" 0 1 (fontified nil)) . -22254) (22254 . 22255)) nil (23273 3046 473508 15000) 0 nil]) ((22253 . 22254)) nil (23273 3046 473510 129000) 0 nil]) ((#(";" 0 1 (fontified t)) . -22253) (undo-tree-id149 . -1) 22254) nil (23273 3046 473513 404000) 0 nil]) ((#(" " 0 1 (fontified t)) . 22252) (undo-tree-id150 . -1) 22253) nil (23273 3046 473517 296000) 0 nil]) ((22253 . 22254) (#(")" 0 1 (fontified nil)) . -22253) (22253 . 22254)) nil (23273 3046 473520 76000) 0 nil]) ((22252 . 22253)) nil (23273 3046 473521 992000) 0 nil]) ((#(")" 0 1 (fontified t)) . -22222) (undo-tree-id151 . -1) (undo-tree-id152 . 1) (undo-tree-id153 . -1) 22223) nil (23273 3046 473527 732000) 0 nil]) ((22221 . 22222)) nil (23273 3046 473529 984000) 0 nil]) ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . -22221) (undo-tree-id154 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 22222)) nil (23273 3046 473533 627000) 0 nil] [nil nil ((22222 . 22223)) ((#("
" 0 1 (fontified t face font-lock-string-face)) . 22222) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1)) (23273 2924 740261 462000) 0 nil]) ((22221 . 22223) (#("\"" 0 1 (fontified nil)) . -22221) (22221 . 22222) (#("\"" 0 1 (fontified nil)) . -22221) (22221 . 22222)) nil (23273 2924 742234 633000) 0 nil]) ((22220 . 22222) (#("(" 0 1 (fontified nil)) . -22220) (22220 . 22221)) nil (23273 2924 740272 979000) 0 nil]) ((22218 . 22220)) nil (23273 2924 740275 625000) 0 nil]) ((22244 . 22247) (#("or" 0 1 (fontified t) 1 2 (fontified t)) . -22244) (undo-tree-id123 . -2) 22246) nil (23273 2924 740286 854000) 0 nil]) ((22242 . 22246)) nil (23273 2924 740289 763000) 0 nil]) ((22241 . 22242)) nil (23273 2924 740291 806000) 0 nil]) ((22206 . 22218) (#(" " 0 1 (fontified nil)) . 22206) (22205 . 22206)) nil (23273 2924 740294 587000) 0 nil]) ((22204 . 22205)) nil (23273 2924 740296 889000) 0 nil]) ((#(" " 0 1 (fontified t)) . 22204) (undo-tree-id124 . -1) 22205) nil (23273 2924 740301 371000) 0 nil]) ((#("=" 0 1 (fontified t)) . -22205) (undo-tree-id125 . -1) 22206 (t 23273 2888 582660 25000)) nil (23273 2924 740306 322000) 0 nil]) ((19347 . 19914) (t 23273 2877 662528 963000)) nil (23273 2888 483858 258000) 0 nil]) ((#("
" 0 1 (fontified t)) . 23989) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 23990) nil (23273 2877 544533 44000) 0 nil]) ((#("bool is_number_token(Token* token) {
    string_slice slice = token->slice;

    for(int i = 0; i < slice.len - 1; i++) {
        if((slice.begin[i] < '0' || slice.begin[i] > '9') &&
           (slice.begin[i] < 'a' || slice.begin[i] > 'f') &&
           (slice.begin[i] < 'A' || slice.begin[i] > 'F')) {
            return false;
        }
    }

    char last_char = slice.begin[slice.len - 1];
    if(last_char >= '0' && last_char <= '9') {
        return true;
    }

    if(last_char == 'h' || last_char == 'b') {
        return true;
    }

    return false;
}
" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t c-type c-decl-arg-start) 21 26 (fontified t face font-lock-type-face) 26 27 (fontified t) 27 28 (fontified t) 28 33 (fontified t face font-lock-variable-name-face) 33 41 (fontified t) 41 52 (fontified t face font-lock-type-face) 52 53 (fontified t c-type c-decl-id-start face font-lock-type-face) 53 54 (fontified t) 54 59 (fontified t face font-lock-variable-name-face) 59 67 (fontified t) 67 69 (fontified t) 69 81 (fontified t) 81 84 (fontified t face font-lock-keyword-face) 84 85 (fontified t) 85 87 (fontified t face font-lock-type-face) 87 88 (fontified t c-type c-decl-id-start face font-lock-type-face) 88 89 (fontified t) 89 90 (fontified t face font-lock-variable-name-face) 90 116 (fontified t) 116 118 (fontified t) 118 130 (fontified t) 130 132 (fontified t face font-lock-keyword-face) 132 151 (fontified t) 151 154 (fontified t face font-lock-string-face) 154 155 (fontified t) 155 157 (fontified t) 157 175 (fontified t) 175 178 (fontified t face font-lock-string-face) 178 180 (fontified t) 180 182 (fontified t) 182 196 (fontified t) 196 212 (fontified t) 212 215 (face font-lock-string-face fontified t) 215 216 (fontified t) 216 218 (fontified t) 218 236 (fontified t) 236 239 (face font-lock-string-face fontified t) 239 241 (fontified t) 241 243 (fontified t) 243 244 (fontified t) 244 250 (fontified t) 250 273 (fontified t) 273 276 (fontified t face font-lock-string-face) 276 277 (fontified t) 277 279 (fontified t) 279 297 (fontified t) 297 300 (fontified t face font-lock-string-face) 300 305 (fontified t) 305 317 (fontified t) 317 323 (fontified t face font-lock-keyword-face) 323 324 (fontified t) 324 329 (fontified t face font-lock-constant-face) 329 352 (fontified t) 352 355 (fontified t face font-lock-type-face) 355 356 (fontified t c-type c-decl-id-start face font-lock-type-face) 356 357 (fontified t) 357 366 (fontified t face font-lock-variable-name-face) 366 401 (fontified t) 401 403 (fontified t face font-lock-keyword-face) 403 414 (fontified t) 414 416 (fontified t) 416 417 (fontified t) 417 420 (fontified t face font-lock-string-face) 420 421 (fontified t) 421 423 (fontified t) 423 434 (fontified t) 434 436 (fontified t) 436 437 (fontified t) 437 440 (fontified t face font-lock-string-face) 440 452 (fontified t) 452 458 (fontified t face font-lock-keyword-face) 458 459 (fontified t) 459 463 (fontified t face font-lock-constant-face) 463 476 (fontified t) 476 478 (fontified t face font-lock-keyword-face) 478 489 (fontified t) 489 491 (fontified t) 491 492 (fontified t) 492 495 (fontified t face font-lock-string-face) 495 496 (fontified t) 496 498 (fontified t) 498 509 (fontified t) 509 511 (fontified t) 511 512 (fontified t) 512 515 (fontified t face font-lock-string-face) 515 527 (fontified t) 527 533 (fontified t face font-lock-keyword-face) 533 534 (fontified t) 534 538 (fontified t face font-lock-constant-face) 538 551 (fontified t) 551 557 (fontified t face font-lock-keyword-face) 557 558 (fontified t) 558 563 (fontified t face font-lock-constant-face) 563 567 (fontified t)) . 23991) (undo-tree-id72 . -471) (undo-tree-id73 . -471) (undo-tree-id74 . -565) (undo-tree-id75 . -565) (undo-tree-id76 . -567) (undo-tree-id77 . -567) (undo-tree-id78 . -567) (undo-tree-id79 . -567) (undo-tree-id80 . -567) (undo-tree-id81 . -214) (undo-tree-id82 . -244) (undo-tree-id83 . -348) (undo-tree-id84 . -348) (undo-tree-id85 . -465) (undo-tree-id86 . -465) (undo-tree-id87 . -444) (undo-tree-id88 . -444) (undo-tree-id89 . -397) (undo-tree-id90 . -397) (undo-tree-id91 . -37) (undo-tree-id92 . -37) (undo-tree-id93 . -76) (undo-tree-id94 . -76) (undo-tree-id95 . -472) (undo-tree-id96 . -472) (undo-tree-id97 . -331) (undo-tree-id98 . -331) (undo-tree-id99 . -305) (undo-tree-id100 . -305) (undo-tree-id101 . -244) (undo-tree-id102 . -244) (undo-tree-id103 . -122) (undo-tree-id104 . -122) (undo-tree-id105 . -183) (undo-tree-id106 . -183) (undo-tree-id107 . -341) (undo-tree-id108 . -341) (undo-tree-id109 . -347) (undo-tree-id110 . -347) (undo-tree-id111 . -77) (undo-tree-id112 . -77) (undo-tree-id113 . -519) (undo-tree-id114 . -519) (undo-tree-id115 . -540) (undo-tree-id116 . -540) (undo-tree-id117 . -546) (undo-tree-id118 . -546) (undo-tree-id119 . -547) (undo-tree-id120 . -547) (undo-tree-id121 . -567) (undo-tree-id122 . -567) (t 23273 2828 658607 541000)) nil (23273 2877 544607 256000) 0 nil]) ((#("            " 0 12 (fontified t)) . -21616) 21574) nil (23273 2828 567053 192000) 0 nil]) ((21550 . 21574) (#(" " 0 1 (fontified nil)) . 21549) (undo-tree-id0 . -1) (21550 . 21551)) nil (23273 2828 567067 865000) 0 nil]) ((21576 . 21577)) nil (23273 2828 567070 448000) 0 nil]) ((21564 . 21575) (#("li" 0 1 (fontified t) 1 2 (fontified t)) . -21564) (undo-tree-id1 . -2) 21566) nil (23273 2828 567076 326000) 0 nil]) ((21562 . 21566)) nil (23273 2828 567078 524000) 0 nil]) ((21550 . 21562) (#("current_" 0 8 (fontified t)) . -21550) (undo-tree-id2 . -8) 21558) nil (23273 2828 567082 202000) 0 nil]) ((21550 . 21558) (#("curre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -21550) (undo-tree-id3 . -5) 21555) nil (23273 2828 567086 246000) 0 nil]) ((21549 . 21555)) nil (23273 2828 567088 494000) 0 nil]) ((21548 . 21549)) nil (23273 2828 567090 71000) 0 nil]) ((21531 . 21547)) nil (23273 2828 567091 544000) 0 nil]) ((21528 . 21531)) nil (23273 2828 567093 125000) 0 nil]) ((21527 . 21528)) nil (23273 2828 567094 632000) 0 nil]) ((21515 . 21527)) nil (23273 2828 567097 56000) 0 nil]) ((21513 . 21514)) nil (23273 2828 567098 492000) 0 nil]) ((21512 . 21513)) nil (23273 2828 567100 2000) 0 nil]) ((21506 . 21512)) nil (23273 2828 567101 445000) 0 nil]) ((21506 . 21508) (#("\"" 0 1 (fontified nil)) . -21506) (21506 . 21507) (#("\"" 0 1 (fontified nil)) . -21506) (21506 . 21507)) nil (23273 2828 567104 415000) 0 nil]) ((21505 . 21507) (#("(" 0 1 (fontified nil)) . -21505) (21505 . 21506)) nil (23273 2828 567107 515000) 0 nil]) ((21498 . 21505)) nil (23273 2828 567109 463000) 0 nil]) ((21482 . 21498) (#("            " 0 12 (fontified nil)) . -21482) (undo-tree-id4 . -12) (#("    " 0 4 (fontified t)) . 21494)) nil (23273 2828 567113 117000) 0 nil]) ((21512 . 21525)) nil (23273 2828 567115 314000) 0 nil]) ((21482 . 21498) (21481 . 21495)) nil (23273 2828 567117 727000) 0 nil]) ((21480 . 21482) (#("{" 0 1 (fontified nil)) . -21480) (21480 . 21481)) nil (23273 2828 567120 8000) 0 nil]) ((21479 . 21480)) nil (23273 2828 567122 32000) 0 nil]) ((21467 . 21478) (#("value" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -21467) (undo-tree-id5 . -5) 21472) nil (23273 2828 567125 637000) 0 nil]) ((21466 . 21472)) nil (23273 2828 567127 765000) 0 nil]) ((21465 . 21467) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -21465) (21465 . 21466)) nil (23273 2828 567130 48000) 0 nil]) ((21463 . 21465)) nil (23273 2828 567132 8000) 0 nil]) ((21450 . 21463)) nil (23273 2828 567133 418000) 0 nil]) ((21449 . 21450)) nil (23273 2828 567134 842000) 0 nil]) ((21417 . 21449)) nil (23273 2828 567136 853000) 0 nil]) ((21410 . 21417)) nil (23273 2828 567138 325000) 0 nil]) ((21402 . 21410)) nil (23273 2828 567139 860000) 0 nil]) ((21401 . 21402)) nil (23273 2828 567141 350000) 0 nil]) ((21396 . 21401)) nil (23273 2828 567142 818000) 0 nil]) ((21433 . 21443)) nil (23273 2828 567144 230000) 0 nil]) ((21432 . 21433)) nil (23273 2828 567145 597000) 0 nil]) ((#("a" 0 1 (fontified t)) . -21432) (undo-tree-id6 . -1) 21433) nil (23273 2828 567148 717000) 0 nil]) ((21432 . 21433)) nil (23273 2828 567150 841000) 0 nil]) ((#("current_line->tokens->next_token" 0 12 (fontified t) 12 14 (fontified t) 14 20 (fontified t) 20 22 (fontified t) 22 26 (fontified t) 26 28 (fontified t) 28 32 (fontified t)) . 21432) (undo-tree-id7 . -32) (undo-tree-id8 . -32) 21464) nil (23273 2828 567156 569000) 0 nil]) ((21430 . 21431)) nil (23273 2828 567158 594000) 0 nil]) ((21426 . 21430)) nil (23273 2828 567160 57000) 0 nil]) ((#("number" 0 6 (fontified t)) . 21426) (undo-tree-id9 . -6) 21432) nil (23273 2828 567163 326000) 0 nil]) ((20959 . 20960)) nil (23273 2828 567165 313000) 0 nil]) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 20959) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 20961) nil (23273 2828 567173 28000) 0 nil]) ((19347 . 20960)) nil (23273 2828 567175 335000) 0 nil]) ((19346 . 19348)) nil (23273 2828 567176 754000) 0 nil]) ((#("
uint16 parse_decimal(string_slice slice) {
    char buffer[16];
    // NOTE(erick): slice.begin is probably not null-terminated;
    snprintf(buffer, 16, \"%.*s\", (int) slice.len, slice.begin);

    return atoi(buffer);
}

uint16 parse_hex(string_slice slice) {
    uint16 result = 0;
    for(int i = 0; i < slice.len; i++) {
        uint8 current_digit;
        if(slice.begin[i] >= '0' && slice.begin[i] <= '9') {
            current_digit = slice.begin[i] - '0';
        } else if(slice.begin[i] >= 'a' && slice.begin[i] <= 'f') {
            current_digit = 10 + slice.begin[i] - 'a';
        } else {
            current_digit = 10 + slice.begin[i] - 'A';
        }

        result = 16 * result + current_digit;
    }

    return result;
}

uint16 parse_binary(string_slice slice) {
    uint16 result = 0;
    for(int i = 0; i < slice.len; i++) {
        uint current_digit = 1;
        if(slice.begin[i] == '0') { current_digit = 0; }

        result = 2 * result + current_digit;
    }

    return result;
}

bool parse_value(Token* operand, uint16* result) {
    if(!is_number_token(operand)) {
        return false;
    }

    string_slice operand_slice = operand->slice;
    bool is_hex    = operand_slice.begin[operand_slice.len - 1] == 'h';
    bool is_binary = operand_slice.begin[operand_slice.len - 1] == 'b';

    if(is_hex) {
        operand_slice.len -= 1;
        *result = parse_hex(operand_slice);
    } else if(is_binary) {
        operand_slice.len -= 1;
        *result = parse_binary(operand_slice);
    } else {
        *result = parse_decimal(operand_slice);
    }

    return true;
}
" 0 1 (fontified t) 1 6 (fontified t face font-lock-type-face) 6 7 (fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (fontified t) 8 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t c-type c-decl-arg-start) 22 34 (fontified t face font-lock-type-face) 34 35 (fontified t) 35 40 (fontified t face font-lock-variable-name-face) 40 48 (fontified t) 48 51 (fontified t face font-lock-type-face) 51 52 (fontified t c-type c-decl-id-start face font-lock-type-face) 52 53 (fontified t) 53 59 (fontified t face font-lock-variable-name-face) 59 65 (fontified t) 65 69 (fontified t c-in-sws t c-is-sws t) 69 70 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 70 71 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 71 72 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 72 76 (fontified t face font-lock-warning-face c-in-sws t) 76 83 (fontified t face font-lock-comment-face c-in-sws t) 83 84 (fontified t face font-lock-comment-face c-in-sws t) 84 130 (fontified t face font-lock-comment-face c-in-sws t) 130 134 (fontified t c-is-sws t c-in-sws t) 134 135 (fontified t c-is-sws t) 135 155 (fontified t) 155 158 (fontified t face font-lock-string-face) 158 159 (fontified t face font-lock-string-face) 159 161 (fontified t face font-lock-string-face) 161 164 (fontified t) 164 167 (fontified t face font-lock-type-face) 167 199 (fontified t) 199 205 (fontified t face font-lock-keyword-face) 205 223 (fontified t) 223 228 (fontified t face font-lock-type-face) 228 229 (fontified t c-type c-decl-id-start face font-lock-type-face) 229 230 (fontified t) 230 238 (fontified t face font-lock-function-name-face) 238 239 (face font-lock-function-name-face fontified t) 239 240 (c-type c-decl-arg-start fontified t) 240 252 (face font-lock-type-face fontified t) 252 253 (fontified t) 253 258 (face font-lock-variable-name-face fontified t) 258 262 (fontified t) 262 266 (fontified t) 266 271 (fontified t face font-lock-type-face) 271 272 (fontified t c-type c-decl-id-start face font-lock-type-face) 272 273 (fontified t) 273 279 (fontified t face font-lock-variable-name-face) 279 289 (fontified t) 289 292 (fontified t face font-lock-keyword-face) 292 293 (fontified t) 293 295 (fontified t face font-lock-type-face) 295 296 (fontified t c-type c-decl-id-start face font-lock-type-face) 296 297 (fontified t) 297 298 (fontified t face font-lock-variable-name-face) 298 320 (fontified t) 320 322 (fontified t) 322 334 (fontified t) 334 338 (fontified t face font-lock-type-face) 338 339 (fontified t c-type c-decl-id-start face font-lock-type-face) 339 340 (fontified t) 340 353 (fontified t face font-lock-variable-name-face) 353 363 (fontified t) 363 365 (fontified t face font-lock-keyword-face) 365 381 (fontified t) 381 383 (fontified t) 383 384 (fontified t) 384 387 (fontified t face font-lock-string-face) 387 388 (fontified t) 388 390 (fontified t) 390 406 (fontified t) 406 408 (fontified t) 408 409 (fontified t) 409 412 (fontified t face font-lock-string-face) 412 461 (fontified t) 461 464 (fontified t face font-lock-string-face) 464 476 (fontified t) 476 480 (fontified t face font-lock-keyword-face) 480 481 (fontified t) 481 483 (fontified t face font-lock-keyword-face) 483 499 (fontified t) 499 501 (fontified t) 501 502 (fontified t) 502 505 (fontified t face font-lock-string-face) 505 506 (fontified t) 506 508 (fontified t) 508 524 (fontified t) 524 526 (fontified t) 526 527 (fontified t) 527 530 (fontified t face font-lock-string-face) 530 565 (fontified t) 565 566 (fontified t) 566 584 (fontified t) 584 587 (fontified t face font-lock-string-face) 587 599 (fontified t) 599 603 (fontified t face font-lock-keyword-face) 603 637 (fontified t) 637 638 (fontified t) 638 656 (fontified t) 656 659 (fontified t face font-lock-string-face) 659 692 (fontified t) 692 693 (fontified t) 693 701 (fontified t) 701 702 (fontified t) 702 729 (fontified t) 729 735 (fontified t face font-lock-keyword-face) 735 747 (fontified t) 747 752 (fontified t face font-lock-type-face) 752 753 (fontified t c-type c-decl-id-start face font-lock-type-face) 753 754 (fontified t) 754 762 (fontified t face font-lock-function-name-face) 762 766 (face font-lock-function-name-face fontified t) 766 767 (c-type c-decl-arg-start fontified t) 767 779 (face font-lock-type-face fontified t) 779 780 (fontified t) 780 785 (face font-lock-variable-name-face fontified t) 785 789 (fontified t) 789 793 (fontified t) 793 798 (fontified t face font-lock-type-face) 798 799 (fontified t c-type c-decl-id-start face font-lock-type-face) 799 800 (fontified t) 800 806 (fontified t face font-lock-variable-name-face) 806 816 (fontified t) 816 819 (fontified t face font-lock-keyword-face) 819 820 (fontified t) 820 822 (fontified t face font-lock-type-face) 822 823 (fontified t c-type c-decl-id-start face font-lock-type-face) 823 824 (fontified t) 824 825 (fontified t face font-lock-variable-name-face) 825 847 (fontified t) 847 849 (fontified t) 849 861 (fontified t) 861 864 (fontified t face font-lock-type-face) 864 865 (fontified t c-type c-decl-id-start face font-lock-type-face) 865 866 (fontified t) 866 879 (fontified t face font-lock-variable-name-face) 879 893 (fontified t) 893 895 (fontified t face font-lock-keyword-face) 895 911 (fontified t) 911 913 (fontified t) 913 914 (fontified t) 914 917 (fontified t face font-lock-string-face) 917 962 (fontified t) 962 963 (fontified t) 963 971 (fontified t) 971 972 (fontified t) 972 999 (fontified t) 999 1005 (fontified t face font-lock-keyword-face) 1005 1017 (fontified t) 1017 1020 (fontified t face font-lock-type-face) 1020 1021 (fontified t c-type c-decl-id-start face font-lock-type-face) 1021 1022 (fontified t) 1022 1033 (fontified t face font-lock-function-name-face) 1033 1034 (fontified t c-type c-decl-arg-start) 1034 1039 (fontified t face font-lock-type-face) 1039 1040 (fontified t) 1040 1041 (fontified t) 1041 1048 (fontified t face font-lock-variable-name-face) 1048 1049 (fontified t c-type c-decl-arg-start) 1049 1050 (fontified t) 1050 1056 (fontified t face font-lock-type-face) 1056 1057 (fontified t) 1057 1058 (fontified t) 1058 1064 (fontified t face font-lock-variable-name-face) 1064 1072 (fontified t) 1072 1074 (fontified t face font-lock-keyword-face) 1074 1075 (fontified t) 1075 1076 (fontified t face font-lock-negation-char-face) 1076 1112 (fontified t) 1112 1118 (fontified t face font-lock-keyword-face) 1118 1119 (fontified t) 1119 1124 (fontified t face font-lock-constant-face) 1124 1137 (fontified t) 1137 1148 (fontified t face font-lock-type-face) 1148 1149 (fontified t c-type c-decl-id-start face font-lock-type-face) 1149 1150 (fontified t) 1150 1163 (fontified t face font-lock-variable-name-face) 1163 1173 (fontified t) 1173 1175 (fontified t) 1175 1186 (fontified t) 1186 1189 (fontified t face font-lock-type-face) 1189 1190 (fontified t c-type c-decl-id-start face font-lock-type-face) 1190 1191 (fontified t) 1191 1197 (fontified t face font-lock-variable-name-face) 1197 1246 (fontified t) 1246 1248 (fontified t) 1248 1249 (fontified t) 1249 1252 (fontified t face font-lock-string-face) 1252 1258 (fontified t) 1258 1261 (fontified t face font-lock-type-face) 1261 1262 (fontified t c-type c-decl-id-start face font-lock-type-face) 1262 1263 (fontified t) 1263 1272 (fontified t face font-lock-variable-name-face) 1272 1289 (fontified t) 1289 1318 (fontified t) 1318 1320 (fontified t) 1320 1321 (fontified t) 1321 1324 (face font-lock-string-face fontified t) 1324 1326 (fontified t) 1326 1331 (fontified t) 1331 1333 (fontified t face font-lock-keyword-face) 1333 1384 (fontified t) 1384 1385 (fontified t) 1385 1426 (fontified t) 1426 1430 (fontified t face font-lock-keyword-face) 1430 1431 (fontified t) 1431 1433 (fontified t face font-lock-keyword-face) 1433 1487 (fontified t) 1487 1488 (fontified t) 1488 1532 (fontified t) 1532 1536 (fontified t face font-lock-keyword-face) 1536 1547 (fontified t) 1547 1548 (fontified t) 1548 1598 (fontified t) 1598 1604 (fontified t face font-lock-keyword-face) 1604 1605 (fontified t) 1605 1609 (fontified t face font-lock-constant-face) 1609 1613 (fontified t)) . 22746) (undo-tree-id15 . -466) (undo-tree-id16 . -466) (undo-tree-id17 . -326) (undo-tree-id18 . -326) (undo-tree-id19 . -44) (undo-tree-id20 . -44) (undo-tree-id21 . -1613) (undo-tree-id22 . -861) (undo-tree-id23 . -325) (undo-tree-id24 . -661) (undo-tree-id25 . -661) (undo-tree-id26 . -195) (undo-tree-id27 . -195) (undo-tree-id28 . -65) (undo-tree-id29 . -65) (undo-tree-id30 . -130) (undo-tree-id31 . -130) (undo-tree-id32 . -194) (undo-tree-id33 . -194) (undo-tree-id34 . -355) (undo-tree-id35 . -355) (undo-tree-id36 . -222) (undo-tree-id37 . -222) (undo-tree-id38 . -223) (undo-tree-id39 . -223) (undo-tree-id40 . -262) (undo-tree-id41 . -262) (undo-tree-id42 . -534) (undo-tree-id43 . -534) (undo-tree-id44 . -589) (undo-tree-id45 . -589) (undo-tree-id46 . -606) (undo-tree-id47 . -606) (undo-tree-id48 . -285) (undo-tree-id49 . -285) (undo-tree-id50 . -671) (undo-tree-id51 . -671) (undo-tree-id52 . -672) (undo-tree-id53 . -672) (undo-tree-id54 . -718) (undo-tree-id55 . -718) (undo-tree-id56 . -416) (undo-tree-id57 . -416) (undo-tree-id58 . -220) (undo-tree-id59 . -220) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -724) (undo-tree-id63 . -724) (undo-tree-id64 . -725) (undo-tree-id65 . -725) (undo-tree-id66 . -1613)) nil (23273 2828 567239 49000) 0 nil]) ((#("// " 0 2 (composition (0 2 #3#) fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face)) . -19866) (#("// " 0 2 (composition (0 2 #3#) fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face)) . -19795) 19894) nil (23273 2828 567245 794000) 0 nil]) ((#("// TODO(erick):" 0 2 (fontified t composition (0 2 #3#) face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face) 3 7 (fontified t face font-lock-warning-face) 7 14 (fontified t face font-lock-comment-face) 14 15 (fontified t composition (1 1 #5#) face font-lock-comment-face)) . 19782) (undo-tree-id67 . -15) (undo-tree-id68 . -15) (t 23271 35884 371961 934000)) nil (23273 2828 567251 466000) 0 nil]) nil nil (23273 2828 567252 970000) 0 nil] #18# 20985 776 nil]